/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = { [key: string]: never }

export type UnknownEnumStringValue = string & {
  _brand: "unknown enum string value"
}

export type t_actionsAddCustomLabelsToSelfHostedRunnerForOrgJson200Response = {
  labels: t_runner_label[]
  total_count: number
}

export type t_actionsAddCustomLabelsToSelfHostedRunnerForOrgJsonRequestBody = {
  labels: string[]
}

export type t_actionsAddCustomLabelsToSelfHostedRunnerForRepoJson200Response = {
  labels: t_runner_label[]
  total_count: number
}

export type t_actionsAddCustomLabelsToSelfHostedRunnerForRepoJsonRequestBody = {
  labels: string[]
}

export type t_actionsCreateEnvironmentVariableJsonRequestBody = {
  name: string
  value: string
}

export type t_actionsCreateHostedRunnerForOrgJsonRequestBody = {
  enable_static_ip?: boolean
  image: {
    id?: string
    source?: "github" | "partner" | "custom" | UnknownEnumStringValue
  }
  maximum_runners?: number
  name: string
  runner_group_id: number
  size: string
}

export type t_actionsCreateOrUpdateEnvironmentSecretJsonRequestBody = {
  encrypted_value: string
  key_id: string
}

export type t_actionsCreateOrUpdateOrgSecretJsonRequestBody = {
  encrypted_value: string
  key_id: string
  selected_repository_ids?: number[]
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_actionsCreateOrUpdateRepoSecretJsonRequestBody = {
  encrypted_value: string
  key_id: string
}

export type t_actionsCreateOrgVariableJsonRequestBody = {
  name: string
  selected_repository_ids?: number[]
  value: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_actionsCreateRepoVariableJsonRequestBody = {
  name: string
  value: string
}

export type t_actionsCreateSelfHostedRunnerGroupForOrgJsonRequestBody = {
  allows_public_repositories?: boolean
  name: string
  network_configuration_id?: string
  restricted_to_workflows?: boolean
  runners?: number[]
  selected_repository_ids?: number[]
  selected_workflows?: string[]
  visibility?: "selected" | "all" | "private" | UnknownEnumStringValue
}

export type t_actionsCreateWorkflowDispatchJsonRequestBody = {
  inputs?: {
    [key: string]: unknown | undefined
  }
  ref: string
}

export type t_actionsGenerateRunnerJitconfigForOrgJson201Response = {
  encoded_jit_config: string
  runner: t_runner
}

export type t_actionsGenerateRunnerJitconfigForOrgJsonRequestBody = {
  labels: string[]
  name: string
  runner_group_id: number
  work_folder?: string
}

export type t_actionsGenerateRunnerJitconfigForRepoJson201Response = {
  encoded_jit_config: string
  runner: t_runner
}

export type t_actionsGenerateRunnerJitconfigForRepoJsonRequestBody = {
  labels: string[]
  name: string
  runner_group_id: number
  work_folder?: string
}

export type t_actionsGetActionsCacheUsageByRepoForOrgJson200Response = {
  repository_cache_usages: t_actions_cache_usage_by_repository[]
  total_count: number
}

export type t_actionsGetHostedRunnersGithubOwnedImagesForOrgJson200Response = {
  images: t_actions_hosted_runner_image[]
  total_count: number
}

export type t_actionsGetHostedRunnersMachineSpecsForOrgJson200Response = {
  machine_specs: t_actions_hosted_runner_machine_spec[]
  total_count: number
}

export type t_actionsGetHostedRunnersPartnerImagesForOrgJson200Response = {
  images: t_actions_hosted_runner_image[]
  total_count: number
}

export type t_actionsGetHostedRunnersPlatformsForOrgJson200Response = {
  platforms: string[]
  total_count: number
}

export type t_actionsListArtifactsForRepoJson200Response = {
  artifacts: t_artifact[]
  total_count: number
}

export type t_actionsListEnvironmentSecretsJson200Response = {
  secrets: t_actions_secret[]
  total_count: number
}

export type t_actionsListEnvironmentVariablesJson200Response = {
  total_count: number
  variables: t_actions_variable[]
}

export type t_actionsListGithubHostedRunnersInGroupForOrgJson200Response = {
  runners: t_actions_hosted_runner[]
  total_count: number
}

export type t_actionsListHostedRunnersForOrgJson200Response = {
  runners: t_actions_hosted_runner[]
  total_count: number
}

export type t_actionsListJobsForWorkflowRunJson200Response = {
  jobs: t_job[]
  total_count: number
}

export type t_actionsListJobsForWorkflowRunAttemptJson200Response = {
  jobs: t_job[]
  total_count: number
}

export type t_actionsListLabelsForSelfHostedRunnerForOrgJson200Response = {
  labels: t_runner_label[]
  total_count: number
}

export type t_actionsListLabelsForSelfHostedRunnerForRepoJson200Response = {
  labels: t_runner_label[]
  total_count: number
}

export type t_actionsListOrgSecretsJson200Response = {
  secrets: t_organization_actions_secret[]
  total_count: number
}

export type t_actionsListOrgVariablesJson200Response = {
  total_count: number
  variables: t_organization_actions_variable[]
}

export type t_actionsListRepoAccessToSelfHostedRunnerGroupInOrgJson200Response =
  {
    repositories: t_minimal_repository[]
    total_count: number
  }

export type t_actionsListRepoOrganizationSecretsJson200Response = {
  secrets: t_actions_secret[]
  total_count: number
}

export type t_actionsListRepoOrganizationVariablesJson200Response = {
  total_count: number
  variables: t_actions_variable[]
}

export type t_actionsListRepoSecretsJson200Response = {
  secrets: t_actions_secret[]
  total_count: number
}

export type t_actionsListRepoVariablesJson200Response = {
  total_count: number
  variables: t_actions_variable[]
}

export type t_actionsListRepoWorkflowsJson200Response = {
  total_count: number
  workflows: t_workflow[]
}

export type t_actionsListSelectedReposForOrgSecretJson200Response = {
  repositories: t_minimal_repository[]
  total_count: number
}

export type t_actionsListSelectedReposForOrgVariableJson200Response = {
  repositories: t_minimal_repository[]
  total_count: number
}

export type t_actionsListSelectedRepositoriesEnabledGithubActionsOrganizationJson200Response =
  {
    repositories: t_repository[]
    total_count: number
  }

export type t_actionsListSelfHostedRunnerGroupsForOrgJson200Response = {
  runner_groups: t_runner_groups_org[]
  total_count: number
}

export type t_actionsListSelfHostedRunnersForOrgJson200Response = {
  runners: t_runner[]
  total_count: number
}

export type t_actionsListSelfHostedRunnersForRepoJson200Response = {
  runners: t_runner[]
  total_count: number
}

export type t_actionsListSelfHostedRunnersInGroupForOrgJson200Response = {
  runners: t_runner[]
  total_count: number
}

export type t_actionsListWorkflowRunArtifactsJson200Response = {
  artifacts: t_artifact[]
  total_count: number
}

export type t_actionsListWorkflowRunsJson200Response = {
  total_count: number
  workflow_runs: t_workflow_run[]
}

export type t_actionsListWorkflowRunsForRepoJson200Response = {
  total_count: number
  workflow_runs: t_workflow_run[]
}

export type t_actionsReRunJobForWorkflowRunJsonRequestBody = {
  enable_debug_logging?: boolean
} | null

export type t_actionsReRunWorkflowJsonRequestBody = {
  enable_debug_logging?: boolean
} | null

export type t_actionsReRunWorkflowFailedJobsJsonRequestBody = {
  enable_debug_logging?: boolean
} | null

export type t_actionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrgJson200Response =
  {
    labels: t_runner_label[]
    total_count: number
  }

export type t_actionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepoJson200Response =
  {
    labels: t_runner_label[]
    total_count: number
  }

export type t_actionsRemoveCustomLabelFromSelfHostedRunnerForOrgJson200Response =
  {
    labels: t_runner_label[]
    total_count: number
  }

export type t_actionsRemoveCustomLabelFromSelfHostedRunnerForRepoJson200Response =
  {
    labels: t_runner_label[]
    total_count: number
  }

export type t_actionsReviewCustomGatesForRunJsonRequestBody =
  | t_review_custom_gates_comment_required
  | t_review_custom_gates_state_required

export type t_actionsReviewPendingDeploymentsForRunJsonRequestBody = {
  comment: string
  environment_ids: number[]
  state: "approved" | "rejected" | UnknownEnumStringValue
}

export type t_actionsSetCustomLabelsForSelfHostedRunnerForOrgJson200Response = {
  labels: t_runner_label[]
  total_count: number
}

export type t_actionsSetCustomLabelsForSelfHostedRunnerForOrgJsonRequestBody = {
  labels: string[]
}

export type t_actionsSetCustomLabelsForSelfHostedRunnerForRepoJson200Response =
  {
    labels: t_runner_label[]
    total_count: number
  }

export type t_actionsSetCustomLabelsForSelfHostedRunnerForRepoJsonRequestBody =
  {
    labels: string[]
  }

export type t_actionsSetCustomOidcSubClaimForRepoJsonRequestBody = {
  include_claim_keys?: string[]
  use_default: boolean
}

export type t_actionsSetGithubActionsPermissionsOrganizationJsonRequestBody = {
  allowed_actions?: t_allowed_actions
  enabled_repositories: t_enabled_repositories
}

export type t_actionsSetGithubActionsPermissionsRepositoryJsonRequestBody = {
  allowed_actions?: t_allowed_actions
  enabled: t_actions_enabled
}

export type t_actionsSetRepoAccessToSelfHostedRunnerGroupInOrgJsonRequestBody =
  {
    selected_repository_ids: number[]
  }

export type t_actionsSetSelectedReposForOrgSecretJsonRequestBody = {
  selected_repository_ids: number[]
}

export type t_actionsSetSelectedReposForOrgVariableJsonRequestBody = {
  selected_repository_ids: number[]
}

export type t_actionsSetSelectedRepositoriesEnabledGithubActionsOrganizationJsonRequestBody =
  {
    selected_repository_ids: number[]
  }

export type t_actionsSetSelfHostedRunnersInGroupForOrgJsonRequestBody = {
  runners: number[]
}

export type t_actionsUpdateEnvironmentVariableJsonRequestBody = {
  name?: string
  value?: string
}

export type t_actionsUpdateHostedRunnerForOrgJsonRequestBody = {
  enable_static_ip?: boolean
  maximum_runners?: number
  name?: string
  runner_group_id?: number
}

export type t_actionsUpdateOrgVariableJsonRequestBody = {
  name?: string
  selected_repository_ids?: number[]
  value?: string
  visibility?: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_actionsUpdateRepoVariableJsonRequestBody = {
  name?: string
  value?: string
}

export type t_actionsUpdateSelfHostedRunnerGroupForOrgJsonRequestBody = {
  allows_public_repositories?: boolean
  name: string
  network_configuration_id?: string | null
  restricted_to_workflows?: boolean
  selected_workflows?: string[]
  visibility?: "selected" | "all" | "private" | UnknownEnumStringValue
}

export type t_activityListPublicEventsJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_activityListReposStarredByUserJson200Response =
  | t_starred_repository[]
  | t_repository[]

export type t_activityListStargazersForRepoJson200Response =
  | t_simple_user[]
  | t_stargazer[]

export type t_activityMarkNotificationsAsReadJson202Response = {
  message?: string
}

export type t_activityMarkNotificationsAsReadJsonRequestBody = {
  last_read_at?: string
  read?: boolean
}

export type t_activityMarkRepoNotificationsAsReadJson202Response = {
  message?: string
  url?: string
}

export type t_activityMarkRepoNotificationsAsReadJsonRequestBody = {
  last_read_at?: string
}

export type t_activitySetRepoSubscriptionJsonRequestBody = {
  ignored?: boolean
  subscribed?: boolean
}

export type t_activitySetThreadSubscriptionJsonRequestBody = {
  ignored?: boolean
}

export type t_appsCheckTokenJsonRequestBody = {
  access_token: string
}

export type t_appsCreateFromManifestJson201Response = t_integration & {
  client_id: string
  client_secret: string
  pem: string
  webhook_secret: string | null
  [key: string]: unknown | undefined
}

export type t_appsCreateInstallationAccessTokenJsonRequestBody = {
  permissions?: t_app_permissions
  repositories?: string[]
  repository_ids?: number[]
}

export type t_appsDeleteAuthorizationJsonRequestBody = {
  access_token: string
}

export type t_appsDeleteTokenJsonRequestBody = {
  access_token: string
}

export type t_appsListInstallationReposForAuthenticatedUserJson200Response = {
  repositories: t_repository[]
  repository_selection?: string
  total_count: number
}

export type t_appsListInstallationsForAuthenticatedUserJson200Response = {
  installations: t_installation[]
  total_count: number
}

export type t_appsListReposAccessibleToInstallationJson200Response = {
  repositories: t_repository[]
  repository_selection?: string
  total_count: number
}

export type t_appsRedeliverWebhookDeliveryJson202Response = {
  [key: string]: unknown | undefined
}

export type t_appsResetTokenJsonRequestBody = {
  access_token: string
}

export type t_appsScopeTokenJsonRequestBody = {
  access_token: string
  permissions?: t_app_permissions
  repositories?: string[]
  repository_ids?: number[]
  target?: string
  target_id?: number
}

export type t_appsUpdateWebhookConfigForAppJsonRequestBody = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_billingGetGithubBillingUsageReportOrgJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_billingGetGithubBillingUsageReportUserJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsCreateCampaignJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsCreateCampaignJsonRequestBody = {
  code_scanning_alerts: {
    alert_numbers: number[]
    repository_id: number
  }[]
  contact_link?: string | null
  description: string
  ends_at: string
  generate_issues?: boolean
  managers?: string[]
  name: string
  team_managers?: string[]
}

export type t_campaignsDeleteCampaignJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsGetCampaignSummaryJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsListOrgCampaignsJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsUpdateCampaignJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_campaignsUpdateCampaignJsonRequestBody = {
  contact_link?: string | null
  description?: string
  ends_at?: string
  managers?: string[]
  name?: string
  state?: t_campaign_state
  team_managers?: string[]
}

export type t_checksCreateJsonRequestBody =
  | {
      status: EmptyObject
      [key: string]: unknown | undefined
    }
  | {
      status?: EmptyObject
      [key: string]: unknown | undefined
    }

export type t_checksCreateSuiteJsonRequestBody = {
  head_sha: string
}

export type t_checksListForRefJson200Response = {
  check_runs: t_check_run[]
  total_count: number
}

export type t_checksListForSuiteJson200Response = {
  check_runs: t_check_run[]
  total_count: number
}

export type t_checksListSuitesForRefJson200Response = {
  check_suites: t_check_suite[]
  total_count: number
}

export type t_checksSetSuitesPreferencesJsonRequestBody = {
  auto_trigger_checks?: {
    app_id: number
    setting: boolean
  }[]
}

export type t_checksUpdateJsonRequestBody = {
  actions?: {
    description: string
    identifier: string
    label: string
  }[]
  completed_at?: string
  conclusion?:
    | "action_required"
    | "cancelled"
    | "failure"
    | "neutral"
    | "success"
    | "skipped"
    | "stale"
    | "timed_out"
    | UnknownEnumStringValue
  details_url?: string
  external_id?: string
  name?: string
  output?: {
    annotations?: {
      annotation_level:
        | "notice"
        | "warning"
        | "failure"
        | UnknownEnumStringValue
      end_column?: number
      end_line: number
      message: string
      path: string
      raw_details?: string
      start_column?: number
      start_line: number
      title?: string
    }[]
    images?: {
      alt: string
      caption?: string
      image_url: string
    }[]
    summary: string
    text?: string
    title?: string
  }
  started_at?: string
  status?:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
    | UnknownEnumStringValue
}

export type t_codeScanningCommitAutofixJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningCreateAutofixJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningCreateVariantAnalysisJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningCreateVariantAnalysisJsonRequestBody = EmptyObject

export type t_codeScanningDeleteAnalysisJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningDeleteCodeqlDatabaseJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetAlertJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetAnalysisApplicationJsonSarif200Response = {
  [key: string]: unknown | undefined
}

export type t_codeScanningGetAnalysisJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetAutofixJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetCodeqlDatabaseJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetDefaultSetupJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetSarifJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetVariantAnalysisJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningGetVariantAnalysisRepoTaskJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningListAlertInstancesJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningListAlertsForOrgJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningListAlertsForRepoJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningListCodeqlDatabasesJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningListRecentAnalysesJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningUpdateAlertJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningUpdateAlertJsonRequestBody = {
  create_request?: t_code_scanning_alert_create_request
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason?: t_code_scanning_alert_dismissed_reason
  state: t_code_scanning_alert_set_state
}

export type t_codeScanningUpdateDefaultSetupJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningUploadSarifJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codeScanningUploadSarifJsonRequestBody = {
  checkout_uri?: string
  commit_sha: t_code_scanning_analysis_commit_sha
  ref: t_code_scanning_ref_full
  sarif: t_code_scanning_analysis_sarif_file
  started_at?: string
  tool_name?: string
  validate?: boolean
}

export type t_codeSecurityAttachConfigurationJson202Response = {
  [key: string]: unknown | undefined
}

export type t_codeSecurityAttachConfigurationJsonRequestBody = {
  scope:
    | "all"
    | "all_without_configurations"
    | "public"
    | "private_or_internal"
    | "selected"
    | UnknownEnumStringValue
  selected_repository_ids?: number[]
}

export type t_codeSecurityAttachEnterpriseConfigurationJson202Response = {
  [key: string]: unknown | undefined
}

export type t_codeSecurityAttachEnterpriseConfigurationJsonRequestBody = {
  scope: "all" | "all_without_configurations" | UnknownEnumStringValue
}

export type t_codeSecurityCreateConfigurationJsonRequestBody = {
  advanced_security?:
    | "enabled"
    | "disabled"
    | "code_security"
    | "secret_protection"
    | UnknownEnumStringValue
  code_scanning_default_setup?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  code_scanning_default_setup_options?: t_code_scanning_default_setup_options
  code_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_alerts?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_security_updates?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  dependency_graph_autosubmit_action?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph_autosubmit_action_options?: {
    labeled_runners?: boolean
  }
  description: string
  enforcement?: "enforced" | "unenforced" | UnknownEnumStringValue
  name: string
  private_vulnerability_reporting?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  secret_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass_options?: {
    reviewers?: {
      reviewer_id: number
      reviewer_type: "TEAM" | "ROLE" | UnknownEnumStringValue
    }[]
  }
  secret_scanning_generic_secrets?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_non_provider_patterns?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_push_protection?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_validity_checks?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
}

export type t_codeSecurityCreateConfigurationForEnterpriseJsonRequestBody = {
  advanced_security?:
    | "enabled"
    | "disabled"
    | "code_security"
    | "secret_protection"
    | UnknownEnumStringValue
  code_scanning_default_setup?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  code_scanning_default_setup_options?: t_code_scanning_default_setup_options
  code_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_alerts?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_security_updates?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  dependency_graph_autosubmit_action?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph_autosubmit_action_options?: {
    labeled_runners?: boolean
  }
  description: string
  enforcement?: "enforced" | "unenforced" | UnknownEnumStringValue
  name: string
  private_vulnerability_reporting?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  secret_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_generic_secrets?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_non_provider_patterns?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_push_protection?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_validity_checks?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
}

export type t_codeSecurityDetachConfigurationJsonRequestBody = {
  selected_repository_ids?: number[]
}

export type t_codeSecuritySetConfigurationAsDefaultJson200Response = {
  configuration?: t_code_security_configuration
  default_for_new_repos?:
    | "all"
    | "none"
    | "private_and_internal"
    | "public"
    | UnknownEnumStringValue
}

export type t_codeSecuritySetConfigurationAsDefaultJsonRequestBody = {
  default_for_new_repos?:
    | "all"
    | "none"
    | "private_and_internal"
    | "public"
    | UnknownEnumStringValue
}

export type t_codeSecuritySetConfigurationAsDefaultForEnterpriseJson200Response =
  {
    configuration?: t_code_security_configuration
    default_for_new_repos?:
      | "all"
      | "none"
      | "private_and_internal"
      | "public"
      | UnknownEnumStringValue
  }

export type t_codeSecuritySetConfigurationAsDefaultForEnterpriseJsonRequestBody =
  {
    default_for_new_repos?:
      | "all"
      | "none"
      | "private_and_internal"
      | "public"
      | UnknownEnumStringValue
  }

export type t_codeSecurityUpdateConfigurationJsonRequestBody = {
  advanced_security?:
    | "enabled"
    | "disabled"
    | "code_security"
    | "secret_protection"
    | UnknownEnumStringValue
  code_scanning_default_setup?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  code_scanning_default_setup_options?: t_code_scanning_default_setup_options
  code_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_alerts?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_security_updates?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  dependency_graph_autosubmit_action?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph_autosubmit_action_options?: {
    labeled_runners?: boolean
  }
  description?: string
  enforcement?: "enforced" | "unenforced" | UnknownEnumStringValue
  name?: string
  private_vulnerability_reporting?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  secret_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass_options?: {
    reviewers?: {
      reviewer_id: number
      reviewer_type: "TEAM" | "ROLE" | UnknownEnumStringValue
    }[]
  }
  secret_scanning_generic_secrets?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_non_provider_patterns?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_push_protection?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_validity_checks?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
}

export type t_codeSecurityUpdateEnterpriseConfigurationJsonRequestBody = {
  advanced_security?:
    | "enabled"
    | "disabled"
    | "code_security"
    | "secret_protection"
    | UnknownEnumStringValue
  code_scanning_default_setup?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  code_scanning_default_setup_options?: t_code_scanning_default_setup_options
  code_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_alerts?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_security_updates?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  dependency_graph_autosubmit_action?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph_autosubmit_action_options?: {
    labeled_runners?: boolean
  }
  description?: string
  enforcement?: "enforced" | "unenforced" | UnknownEnumStringValue
  name?: string
  private_vulnerability_reporting?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  secret_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_generic_secrets?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_non_provider_patterns?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_push_protection?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_validity_checks?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
}

export type t_codespacesCheckPermissionsForDevcontainerJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codespacesCodespaceMachinesForAuthenticatedUserJson200Response = {
  machines: t_codespace_machine[]
  total_count: number
}

export type t_codespacesCreateForAuthenticatedUserJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codespacesCreateForAuthenticatedUserJsonRequestBody =
  | {
      client_ip?: string
      devcontainer_path?: string
      display_name?: string
      geo?:
        | "EuropeWest"
        | "SoutheastAsia"
        | "UsEast"
        | "UsWest"
        | UnknownEnumStringValue
      idle_timeout_minutes?: number
      location?: string
      machine?: string
      multi_repo_permissions_opt_out?: boolean
      ref?: string
      repository_id: number
      retention_period_minutes?: number
      working_directory?: string
    }
  | {
      devcontainer_path?: string
      geo?:
        | "EuropeWest"
        | "SoutheastAsia"
        | "UsEast"
        | "UsWest"
        | UnknownEnumStringValue
      idle_timeout_minutes?: number
      location?: string
      machine?: string
      pull_request: {
        pull_request_number: number
        repository_id: number
      }
      working_directory?: string
    }

export type t_codespacesCreateOrUpdateOrgSecretJsonRequestBody = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: number[]
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_codespacesCreateOrUpdateRepoSecretJsonRequestBody = {
  encrypted_value?: string
  key_id?: string
}

export type t_codespacesCreateOrUpdateSecretForAuthenticatedUserJsonRequestBody =
  {
    encrypted_value?: string
    key_id: string
    selected_repository_ids?: (number | string)[]
  }

export type t_codespacesCreateWithPrForAuthenticatedUserJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codespacesCreateWithPrForAuthenticatedUserJsonRequestBody = {
  client_ip?: string
  devcontainer_path?: string
  display_name?: string
  geo?:
    | "EuropeWest"
    | "SoutheastAsia"
    | "UsEast"
    | "UsWest"
    | UnknownEnumStringValue
  idle_timeout_minutes?: number
  location?: string
  machine?: string
  multi_repo_permissions_opt_out?: boolean
  retention_period_minutes?: number
  working_directory?: string
} | null

export type t_codespacesCreateWithRepoForAuthenticatedUserJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_codespacesCreateWithRepoForAuthenticatedUserJsonRequestBody = {
  client_ip?: string
  devcontainer_path?: string
  display_name?: string
  geo?:
    | "EuropeWest"
    | "SoutheastAsia"
    | "UsEast"
    | "UsWest"
    | UnknownEnumStringValue
  idle_timeout_minutes?: number
  location?: string
  machine?: string
  multi_repo_permissions_opt_out?: boolean
  ref?: string
  retention_period_minutes?: number
  working_directory?: string
} | null

export type t_codespacesDeleteCodespacesAccessUsersJsonRequestBody = {
  selected_usernames: string[]
}

export type t_codespacesDeleteForAuthenticatedUserJson202Response = {
  [key: string]: unknown | undefined
}

export type t_codespacesDeleteFromOrganizationJson202Response = {
  [key: string]: unknown | undefined
}

export type t_codespacesGetCodespacesForUserInOrgJson200Response = {
  codespaces: t_codespace[]
  total_count: number
}

export type t_codespacesListDevcontainersInRepositoryForAuthenticatedUserJson200Response =
  {
    devcontainers: {
      display_name?: string
      name?: string
      path: string
    }[]
    total_count: number
  }

export type t_codespacesListForAuthenticatedUserJson200Response = {
  codespaces: t_codespace[]
  total_count: number
}

export type t_codespacesListInOrganizationJson200Response = {
  codespaces: t_codespace[]
  total_count: number
}

export type t_codespacesListInRepositoryForAuthenticatedUserJson200Response = {
  codespaces: t_codespace[]
  total_count: number
}

export type t_codespacesListOrgSecretsJson200Response = {
  secrets: t_codespaces_org_secret[]
  total_count: number
}

export type t_codespacesListRepoSecretsJson200Response = {
  secrets: t_repo_codespaces_secret[]
  total_count: number
}

export type t_codespacesListRepositoriesForSecretForAuthenticatedUserJson200Response =
  {
    repositories: t_minimal_repository[]
    total_count: number
  }

export type t_codespacesListSecretsForAuthenticatedUserJson200Response = {
  secrets: t_codespaces_secret[]
  total_count: number
}

export type t_codespacesListSelectedReposForOrgSecretJson200Response = {
  repositories: t_minimal_repository[]
  total_count: number
}

export type t_codespacesPreFlightWithRepoForAuthenticatedUserJson200Response = {
  billable_owner?: t_simple_user
  defaults?: {
    devcontainer_path: string | null
    location: string
  }
}

export type t_codespacesPublishForAuthenticatedUserJsonRequestBody = {
  name?: string
  private?: boolean
}

export type t_codespacesRepoMachinesForAuthenticatedUserJson200Response = {
  machines: t_codespace_machine[]
  total_count: number
}

export type t_codespacesSetCodespacesAccessJsonRequestBody = {
  selected_usernames?: string[]
  visibility:
    | "disabled"
    | "selected_members"
    | "all_members"
    | "all_members_and_outside_collaborators"
    | UnknownEnumStringValue
}

export type t_codespacesSetCodespacesAccessUsersJsonRequestBody = {
  selected_usernames: string[]
}

export type t_codespacesSetRepositoriesForSecretForAuthenticatedUserJsonRequestBody =
  {
    selected_repository_ids: number[]
  }

export type t_codespacesSetSelectedReposForOrgSecretJsonRequestBody = {
  selected_repository_ids: number[]
}

export type t_codespacesUpdateForAuthenticatedUserJsonRequestBody = {
  display_name?: string
  machine?: string
  recent_folders?: string[]
}

export type t_copilotAddCopilotSeatsForTeamsJson201Response = {
  seats_created: number
}

export type t_copilotAddCopilotSeatsForTeamsJsonRequestBody = {
  selected_teams: string[]
}

export type t_copilotAddCopilotSeatsForUsersJson201Response = {
  seats_created: number
}

export type t_copilotAddCopilotSeatsForUsersJsonRequestBody = {
  selected_usernames: string[]
}

export type t_copilotCancelCopilotSeatAssignmentForTeamsJson200Response = {
  seats_cancelled: number
}

export type t_copilotCancelCopilotSeatAssignmentForTeamsJsonRequestBody = {
  selected_teams: string[]
}

export type t_copilotCancelCopilotSeatAssignmentForUsersJson200Response = {
  seats_cancelled: number
}

export type t_copilotCancelCopilotSeatAssignmentForUsersJsonRequestBody = {
  selected_usernames: string[]
}

export type t_copilotListCopilotSeatsJson200Response = {
  seats?: t_copilot_seat_details[]
  total_seats?: number
}

export type t_credentialsRevokeJson202Response = {
  [key: string]: unknown | undefined
}

export type t_credentialsRevokeJsonRequestBody = {
  credentials: string[]
}

export type t_dependabotCreateOrUpdateOrgSecretJsonRequestBody = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: string[]
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_dependabotCreateOrUpdateRepoSecretJsonRequestBody = {
  encrypted_value?: string
  key_id?: string
}

export type t_dependabotListOrgSecretsJson200Response = {
  secrets: t_organization_dependabot_secret[]
  total_count: number
}

export type t_dependabotListRepoSecretsJson200Response = {
  secrets: t_dependabot_secret[]
  total_count: number
}

export type t_dependabotListSelectedReposForOrgSecretJson200Response = {
  repositories: t_minimal_repository[]
  total_count: number
}

export type t_dependabotSetSelectedReposForOrgSecretJsonRequestBody = {
  selected_repository_ids: number[]
}

export type t_dependabotUpdateAlertJsonRequestBody = {
  dismissed_comment?: string
  dismissed_reason?:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | UnknownEnumStringValue
  state: "dismissed" | "open" | UnknownEnumStringValue
}

export type t_dependencyGraphCreateRepositorySnapshotJson201Response = {
  created_at: string
  id: number
  message: string
  result: string
}

export type t_emojisGetJson200Response = {
  [key: string]: string | undefined
}

export type t_gistsCheckIsStarredJson404Response = EmptyObject

export type t_gistsCreateJsonRequestBody = {
  description?: string
  files: {
    [key: string]:
      | {
          content: string
        }
      | undefined
  }
  public?: boolean | "true" | "false" | UnknownEnumStringValue
}

export type t_gistsCreateCommentJsonRequestBody = {
  body: string
}

export type t_gistsGetJson403Response = {
  block?: {
    created_at?: string
    html_url?: string | null
    reason?: string
  }
  documentation_url?: string
  message?: string
}

export type t_gistsGetCommentJson403Response = {
  block?: {
    created_at?: string
    html_url?: string | null
    reason?: string
  }
  documentation_url?: string
  message?: string
}

export type t_gistsUpdateJsonRequestBody = {
  description?: string
  files?: {
    [key: string]:
      | ({
          content?: string
          filename?: string | null
        } | null)
      | undefined
  }
} | null

export type t_gistsUpdateCommentJsonRequestBody = {
  body: string
}

export type t_gitCreateBlobJson422Response =
  | t_validation_error
  | t_repository_rule_violation_error

export type t_gitCreateBlobJsonRequestBody = {
  content: string
  encoding?: string
}

export type t_gitCreateCommitJsonRequestBody = {
  author?: {
    date?: string
    email: string
    name: string
  }
  committer?: {
    date?: string
    email?: string
    name?: string
  }
  message: string
  parents?: string[]
  signature?: string
  tree: string
}

export type t_gitCreateRefJsonRequestBody = {
  ref: string
  sha: string
}

export type t_gitCreateTagJsonRequestBody = {
  message: string
  object: string
  tag: string
  tagger?: {
    date?: string
    email: string
    name: string
  }
  type: "commit" | "tree" | "blob" | UnknownEnumStringValue
}

export type t_gitCreateTreeJsonRequestBody = {
  base_tree?: string
  tree: {
    content?: string
    mode?:
      | "100644"
      | "100755"
      | "040000"
      | "160000"
      | "120000"
      | UnknownEnumStringValue
    path?: string
    sha?: string | null
    type?: "blob" | "tree" | "commit" | UnknownEnumStringValue
  }[]
}

export type t_gitUpdateRefJsonRequestBody = {
  force?: boolean
  sha: string
}

export type t_hostedComputeCreateNetworkConfigurationForOrgJsonRequestBody = {
  compute_service?: "none" | "actions" | UnknownEnumStringValue
  name: string
  network_settings_ids: string[]
}

export type t_hostedComputeListNetworkConfigurationsForOrgJson200Response = {
  network_configurations: t_network_configuration[]
  total_count: number
}

export type t_hostedComputeUpdateNetworkConfigurationForOrgJsonRequestBody = {
  compute_service?: "none" | "actions" | UnknownEnumStringValue
  name?: string
  network_settings_ids?: string[]
}

export type t_actions_billing_usage = {
  included_minutes: number
  minutes_used_breakdown: {
    MACOS?: number
    UBUNTU?: number
    WINDOWS?: number
    macos_12_core?: number
    total?: number
    ubuntu_16_core?: number
    ubuntu_32_core?: number
    ubuntu_4_core?: number
    ubuntu_64_core?: number
    ubuntu_8_core?: number
    windows_16_core?: number
    windows_32_core?: number
    windows_4_core?: number
    windows_64_core?: number
    windows_8_core?: number
  }
  total_minutes_used: number
  total_paid_minutes_used: number
}

export type t_actions_cache_list = {
  actions_caches: {
    created_at?: string
    id?: number
    key?: string
    last_accessed_at?: string
    ref?: string
    size_in_bytes?: number
    version?: string
  }[]
  total_count: number
}

export type t_actions_cache_usage_by_repository = {
  active_caches_count: number
  active_caches_size_in_bytes: number
  full_name: string
}

export type t_actions_cache_usage_org_enterprise = {
  total_active_caches_count: number
  total_active_caches_size_in_bytes: number
}

export type t_actions_can_approve_pull_request_reviews = boolean

export type t_actions_default_workflow_permissions =
  | "read"
  | "write"
  | UnknownEnumStringValue

export type t_actions_enabled = boolean

export type t_actions_get_default_workflow_permissions = {
  can_approve_pull_request_reviews: t_actions_can_approve_pull_request_reviews
  default_workflow_permissions: t_actions_default_workflow_permissions
}

export type t_actions_hosted_runner = {
  id: number
  image_details: t_nullable_actions_hosted_runner_pool_image
  last_active_on?: string | null
  machine_size_details: t_actions_hosted_runner_machine_spec
  maximum_runners?: number
  name: string
  platform: string
  public_ip_enabled: boolean
  public_ips?: t_public_ip[]
  runner_group_id?: number
  status:
    | "Ready"
    | "Provisioning"
    | "Shutdown"
    | "Deleting"
    | "Stuck"
    | UnknownEnumStringValue
}

export type t_actions_hosted_runner_image = {
  display_name: string
  id: string
  platform: string
  size_gb: number
  source: "github" | "partner" | "custom" | UnknownEnumStringValue
}

export type t_actions_hosted_runner_limits = {
  public_ips: {
    current_usage: number
    maximum: number
  }
}

export type t_actions_hosted_runner_machine_spec = {
  cpu_cores: number
  id: string
  memory_gb: number
  storage_gb: number
}

export type t_actions_organization_permissions = {
  allowed_actions?: t_allowed_actions
  enabled_repositories: t_enabled_repositories
  selected_actions_url?: t_selected_actions_url
  selected_repositories_url?: string
}

export type t_actions_public_key = {
  created_at?: string
  id?: number
  key: string
  key_id: string
  title?: string
  url?: string
}

export type t_actions_repository_permissions = {
  allowed_actions?: t_allowed_actions
  enabled: t_actions_enabled
  selected_actions_url?: t_selected_actions_url
}

export type t_actions_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_actions_set_default_workflow_permissions = {
  can_approve_pull_request_reviews?: t_actions_can_approve_pull_request_reviews
  default_workflow_permissions?: t_actions_default_workflow_permissions
}

export type t_actions_variable = {
  created_at: string
  name: string
  updated_at: string
  value: string
}

export type t_actions_workflow_access_to_repository = {
  access_level: "none" | "user" | "organization" | UnknownEnumStringValue
}

export type t_activity = {
  activity_type:
    | "push"
    | "force_push"
    | "branch_deletion"
    | "branch_creation"
    | "pr_merge"
    | "merge_queue_merge"
    | UnknownEnumStringValue
  actor: t_nullable_simple_user
  after: string
  before: string
  id: number
  node_id: string
  ref: string
  timestamp: string
}

export type t_actor = {
  avatar_url: string
  display_login?: string
  gravatar_id: string | null
  id: number
  login: string
  url: string
}

export type t_added_to_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?: {
    column_name: string
    id: number
    previous_column_name?: string
    project_id: number
    project_url: string
    url: string
  }
  url: string
}

export type t_alert_auto_dismissed_at = string | null

export type t_alert_created_at = string

export type t_alert_dismissed_at = string | null

export type t_alert_fixed_at = string | null

export type t_alert_html_url = string

export type t_alert_instances_url = string

export type t_alert_number = number

export type t_alert_updated_at = string

export type t_alert_url = string

export type t_allowed_actions =
  | "all"
  | "local_only"
  | "selected"
  | UnknownEnumStringValue

export type t_api_insights_route_stats = {
  api_route?: string
  http_method?: string
  last_rate_limited_timestamp?: string | null
  last_request_timestamp?: string
  rate_limited_request_count?: number
  total_request_count?: number
}[]

export type t_api_insights_subject_stats = {
  last_rate_limited_timestamp?: string | null
  last_request_timestamp?: string
  rate_limited_request_count?: number
  subject_id?: number
  subject_name?: string
  subject_type?: string
  total_request_count?: number
}[]

export type t_api_insights_summary_stats = {
  rate_limited_request_count?: number
  total_request_count?: number
}

export type t_api_insights_time_stats = {
  rate_limited_request_count?: number
  timestamp?: string
  total_request_count?: number
}[]

export type t_api_insights_user_stats = {
  actor_id?: number
  actor_name?: string
  actor_type?: string
  integration_id?: number | null
  last_rate_limited_timestamp?: string | null
  last_request_timestamp?: string
  oauth_application_id?: number | null
  rate_limited_request_count?: number
  total_request_count?: number
}[]

export type t_api_overview = {
  actions?: string[]
  actions_macos?: string[]
  api?: string[]
  codespaces?: string[]
  copilot?: string[]
  dependabot?: string[]
  domains?: {
    actions?: string[]
    actions_inbound?: {
      full_domains?: string[]
      wildcard_domains?: string[]
    }
    artifact_attestations?: {
      services?: string[]
      trust_domain?: string
    }
    codespaces?: string[]
    copilot?: string[]
    packages?: string[]
    website?: string[]
  }
  git?: string[]
  github_enterprise_importer?: string[]
  hooks?: string[]
  importer?: string[]
  packages?: string[]
  pages?: string[]
  ssh_key_fingerprints?: {
    SHA256_DSA?: string
    SHA256_ECDSA?: string
    SHA256_ED25519?: string
    SHA256_RSA?: string
  }
  ssh_keys?: string[]
  verifiable_password_authentication: boolean
  web?: string[]
}

export type t_app_permissions = {
  actions?: "read" | "write" | UnknownEnumStringValue
  administration?: "read" | "write" | UnknownEnumStringValue
  checks?: "read" | "write" | UnknownEnumStringValue
  codespaces?: "read" | "write" | UnknownEnumStringValue
  contents?: "read" | "write" | UnknownEnumStringValue
  dependabot_secrets?: "read" | "write" | UnknownEnumStringValue
  deployments?: "read" | "write" | UnknownEnumStringValue
  email_addresses?: "read" | "write" | UnknownEnumStringValue
  environments?: "read" | "write" | UnknownEnumStringValue
  followers?: "read" | "write" | UnknownEnumStringValue
  git_ssh_keys?: "read" | "write" | UnknownEnumStringValue
  gpg_keys?: "read" | "write" | UnknownEnumStringValue
  interaction_limits?: "read" | "write" | UnknownEnumStringValue
  issues?: "read" | "write" | UnknownEnumStringValue
  members?: "read" | "write" | UnknownEnumStringValue
  metadata?: "read" | "write" | UnknownEnumStringValue
  organization_administration?: "read" | "write" | UnknownEnumStringValue
  organization_announcement_banners?: "read" | "write" | UnknownEnumStringValue
  organization_copilot_seat_management?: "write" | UnknownEnumStringValue
  organization_custom_org_roles?: "read" | "write" | UnknownEnumStringValue
  organization_custom_properties?:
    | "read"
    | "write"
    | "admin"
    | UnknownEnumStringValue
  organization_custom_roles?: "read" | "write" | UnknownEnumStringValue
  organization_events?: "read" | UnknownEnumStringValue
  organization_hooks?: "read" | "write" | UnknownEnumStringValue
  organization_packages?: "read" | "write" | UnknownEnumStringValue
  organization_personal_access_token_requests?:
    | "read"
    | "write"
    | UnknownEnumStringValue
  organization_personal_access_tokens?:
    | "read"
    | "write"
    | UnknownEnumStringValue
  organization_plan?: "read" | UnknownEnumStringValue
  organization_projects?: "read" | "write" | "admin" | UnknownEnumStringValue
  organization_secrets?: "read" | "write" | UnknownEnumStringValue
  organization_self_hosted_runners?: "read" | "write" | UnknownEnumStringValue
  organization_user_blocking?: "read" | "write" | UnknownEnumStringValue
  packages?: "read" | "write" | UnknownEnumStringValue
  pages?: "read" | "write" | UnknownEnumStringValue
  profile?: "write" | UnknownEnumStringValue
  pull_requests?: "read" | "write" | UnknownEnumStringValue
  repository_custom_properties?: "read" | "write" | UnknownEnumStringValue
  repository_hooks?: "read" | "write" | UnknownEnumStringValue
  repository_projects?: "read" | "write" | "admin" | UnknownEnumStringValue
  secret_scanning_alerts?: "read" | "write" | UnknownEnumStringValue
  secrets?: "read" | "write" | UnknownEnumStringValue
  security_events?: "read" | "write" | UnknownEnumStringValue
  single_file?: "read" | "write" | UnknownEnumStringValue
  starring?: "read" | "write" | UnknownEnumStringValue
  statuses?: "read" | "write" | UnknownEnumStringValue
  team_discussions?: "read" | "write" | UnknownEnumStringValue
  vulnerability_alerts?: "read" | "write" | UnknownEnumStringValue
  workflows?: "write" | UnknownEnumStringValue
}

export type t_artifact = {
  archive_download_url: string
  created_at: string | null
  digest?: string | null
  expired: boolean
  expires_at: string | null
  id: number
  name: string
  node_id: string
  size_in_bytes: number
  updated_at: string | null
  url: string
  workflow_run?: {
    head_branch?: string
    head_repository_id?: number
    head_sha?: string
    id?: number
    repository_id?: number
  } | null
}

export type t_assigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  assigner: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_integration
  url: string
}

export type t_authentication_token = {
  expires_at: string
  permissions?: EmptyObject
  repositories?: t_repository[]
  repository_selection?: "all" | "selected" | UnknownEnumStringValue
  single_file?: string | null
  token: string
}

export type t_author_association =
  | "COLLABORATOR"
  | "CONTRIBUTOR"
  | "FIRST_TIMER"
  | "FIRST_TIME_CONTRIBUTOR"
  | "MANNEQUIN"
  | "MEMBER"
  | "NONE"
  | "OWNER"
  | UnknownEnumStringValue

export type t_authorization = {
  app: {
    client_id: string
    name: string
    url: string
  }
  created_at: string
  expires_at: string | null
  fingerprint: string | null
  hashed_token: string | null
  id: number
  installation?: t_nullable_scoped_installation
  note: string | null
  note_url: string | null
  scopes: string[] | null
  token: string
  token_last_eight: string | null
  updated_at: string
  url: string
  user?: t_nullable_simple_user
}

export type t_auto_merge = {
  commit_message: string
  commit_title: string
  enabled_by: t_simple_user
  merge_method: "merge" | "squash" | "rebase" | UnknownEnumStringValue
} | null

export type t_autolink = {
  id: number
  is_alphanumeric: boolean
  key_prefix: string
  url_template: string
}

export type t_base_gist = {
  comments: number
  comments_enabled?: boolean
  comments_url: string
  commits_url: string
  created_at: string
  description: string | null
  files: {
    [key: string]:
      | {
          encoding?: string
          filename?: string
          language?: string
          raw_url?: string
          size?: number
          type?: string
        }
      | undefined
  }
  forks?: unknown[]
  forks_url: string
  git_pull_url: string
  git_push_url: string
  history?: unknown[]
  html_url: string
  id: string
  node_id: string
  owner?: t_simple_user
  public: boolean
  truncated?: boolean
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_basic_error = {
  documentation_url?: string
  message?: string
  status?: string
  url?: string
}

export type t_billing_usage_report = {
  usageItems?: {
    date: string
    discountAmount: number
    grossAmount: number
    netAmount: number
    organizationName: string
    pricePerUnit: number
    product: string
    quantity: number
    repositoryName?: string
    sku: string
    unitType: string
  }[]
}

export type t_billing_usage_report_user = {
  usageItems?: {
    date: string
    discountAmount: number
    grossAmount: number
    netAmount: number
    pricePerUnit: number
    product: string
    quantity: number
    repositoryName?: string
    sku: string
    unitType: string
  }[]
}

export type t_blob = {
  content: string
  encoding: string
  highlighted_content?: string
  node_id: string
  sha: string
  size: number | null
  url: string
}

export type t_branch_protection = {
  allow_deletions?: {
    enabled?: boolean
  }
  allow_force_pushes?: {
    enabled?: boolean
  }
  allow_fork_syncing?: {
    enabled?: boolean
  }
  block_creations?: {
    enabled?: boolean
  }
  enabled?: boolean
  enforce_admins?: t_protected_branch_admin_enforced
  lock_branch?: {
    enabled?: boolean
  }
  name?: string
  protection_url?: string
  required_conversation_resolution?: {
    enabled?: boolean
  }
  required_linear_history?: {
    enabled?: boolean
  }
  required_pull_request_reviews?: t_protected_branch_pull_request_review
  required_signatures?: {
    enabled: boolean
    url: string
  }
  required_status_checks?: t_protected_branch_required_status_check
  restrictions?: t_branch_restriction_policy
  url?: string
}

export type t_branch_restriction_policy = {
  apps: {
    client_id?: string
    created_at?: string
    description?: string
    events?: string[]
    external_url?: string
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    owner?: {
      avatar_url?: string
      description?: string
      events_url?: string
      followers_url?: string
      following_url?: string
      gists_url?: string
      gravatar_id?: string
      hooks_url?: string
      html_url?: string
      id?: number
      issues_url?: string
      login?: string
      members_url?: string
      node_id?: string
      organizations_url?: string
      public_members_url?: string
      received_events_url?: string
      repos_url?: string
      site_admin?: boolean
      starred_url?: string
      subscriptions_url?: string
      type?: string
      url?: string
      user_view_type?: string
    }
    permissions?: {
      contents?: string
      issues?: string
      metadata?: string
      single_file?: string
    }
    slug?: string
    updated_at?: string
  }[]
  apps_url: string
  teams: {
    description?: string | null
    html_url?: string
    id?: number
    members_url?: string
    name?: string
    node_id?: string
    notification_setting?: string
    parent?: string | null
    permission?: string
    privacy?: string
    repositories_url?: string
    slug?: string
    url?: string
  }[]
  teams_url: string
  url: string
  users: {
    avatar_url?: string
    events_url?: string
    followers_url?: string
    following_url?: string
    gists_url?: string
    gravatar_id?: string
    html_url?: string
    id?: number
    login?: string
    node_id?: string
    organizations_url?: string
    received_events_url?: string
    repos_url?: string
    site_admin?: boolean
    starred_url?: string
    subscriptions_url?: string
    type?: string
    url?: string
    user_view_type?: string
  }[]
  users_url: string
}

export type t_branch_short = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
}

export type t_branch_with_protection = {
  _links: {
    html: string
    self: string
  }
  commit: t_commit
  name: string
  pattern?: string
  protected: boolean
  protection: t_branch_protection
  protection_url: string
  required_approving_review_count?: number
}

export type t_campaign_state = "open" | "closed" | UnknownEnumStringValue

export type t_campaign_summary = {
  alert_stats?: {
    closed_count: number
    in_progress_count: number
    open_count: number
  }
  closed_at?: string | null
  contact_link: string | null
  created_at: string
  description: string
  ends_at: string
  managers: t_simple_user[]
  name?: string
  number: number
  published_at?: string
  state: t_campaign_state
  team_managers?: t_team[]
  updated_at: string
}

export type t_check_annotation = {
  annotation_level: string | null
  blob_href: string
  end_column: number | null
  end_line: number
  message: string | null
  path: string
  raw_details: string | null
  start_column: number | null
  start_line: number
  title: string | null
}

export type t_check_automated_security_fixes = {
  enabled: boolean
  paused: boolean
}

export type t_check_run = {
  app: t_nullable_integration
  check_suite: {
    id: number
  } | null
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | UnknownEnumStringValue
    | null
  deployment?: t_deployment_simple
  details_url: string | null
  external_id: string | null
  head_sha: string
  html_url: string | null
  id: number
  name: string
  node_id: string
  output: {
    annotations_count: number
    annotations_url: string
    summary: string | null
    text: string | null
    title: string | null
  }
  pull_requests: t_pull_request_minimal[]
  started_at: string | null
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
    | UnknownEnumStringValue
  url: string
}

export type t_check_suite = {
  after: string | null
  app: t_nullable_integration
  before: string | null
  check_runs_url: string
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | "startup_failure"
    | "stale"
    | UnknownEnumStringValue
    | null
  created_at: string | null
  head_branch: string | null
  head_commit: t_simple_commit
  head_sha: string
  id: number
  latest_check_runs_count: number
  node_id: string
  pull_requests: t_pull_request_minimal[] | null
  repository: t_minimal_repository
  rerequestable?: boolean
  runs_rerequestable?: boolean
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
    | UnknownEnumStringValue
    | null
  updated_at: string | null
  url: string | null
}

export type t_check_suite_preference = {
  preferences: {
    auto_trigger_checks?: {
      app_id: number
      setting: boolean
    }[]
  }
  repository: t_minimal_repository
}

export type t_classroom = {
  archived: boolean
  id: number
  name: string
  organization: t_simple_classroom_organization
  url: string
}

export type t_classroom_accepted_assignment = {
  assignment: t_simple_classroom_assignment
  commit_count: number
  grade: string
  id: number
  passing: boolean
  repository: t_simple_classroom_repository
  students: t_simple_classroom_user[]
  submitted: boolean
}

export type t_classroom_assignment = {
  accepted: number
  classroom: t_classroom
  deadline: string | null
  editor: string
  feedback_pull_requests_enabled: boolean
  id: number
  invitations_enabled: boolean
  invite_link: string
  language: string
  max_members: number | null
  max_teams: number | null
  passing: number
  public_repo: boolean
  slug: string
  starter_code_repository: t_simple_classroom_repository
  students_are_repo_admins: boolean
  submitted: number
  title: string
  type: "individual" | "group" | UnknownEnumStringValue
}

export type t_classroom_assignment_grade = {
  assignment_name: string
  assignment_url: string
  github_username: string
  group_name?: string
  points_available: number
  points_awarded: number
  roster_identifier: string
  starter_code_url: string
  student_repository_name: string
  student_repository_url: string
  submission_timestamp: string
}

export type t_clone_traffic = {
  clones: t_traffic[]
  count: number
  uniques: number
}

export type t_code_frequency_stat = number[]

export type t_code_of_conduct = {
  body?: string
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_scanning_alert = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_alert_classification =
  | "source"
  | "generated"
  | "test"
  | "library"
  | UnknownEnumStringValue
  | null

export type t_code_scanning_alert_create_request = boolean

export type t_code_scanning_alert_dismissed_comment = string | null

export type t_code_scanning_alert_dismissed_reason =
  | "false positive"
  | "won't fix"
  | "used in tests"
  | UnknownEnumStringValue
  | null

export type t_code_scanning_alert_environment = string

export type t_code_scanning_alert_instance = {
  analysis_key?: t_code_scanning_analysis_analysis_key
  category?: t_code_scanning_analysis_category
  classifications?: t_code_scanning_alert_classification[]
  commit_sha?: string
  environment?: t_code_scanning_alert_environment
  html_url?: string
  location?: t_code_scanning_alert_location
  message?: {
    text?: string
  }
  ref?: t_code_scanning_ref
  state?: t_code_scanning_alert_state
}

export type t_code_scanning_alert_items = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule_summary
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_alert_location = {
  end_column?: number
  end_line?: number
  path?: string
  start_column?: number
  start_line?: number
}

export type t_code_scanning_alert_rule = {
  description?: string
  full_description?: string
  help?: string | null
  help_uri?: string | null
  id?: string | null
  name?: string
  security_severity_level?:
    | "low"
    | "medium"
    | "high"
    | "critical"
    | UnknownEnumStringValue
    | null
  severity?:
    | "none"
    | "note"
    | "warning"
    | "error"
    | UnknownEnumStringValue
    | null
  tags?: string[] | null
}

export type t_code_scanning_alert_rule_summary = {
  description?: string
  full_description?: string
  help?: string | null
  help_uri?: string | null
  id?: string | null
  name?: string
  security_severity_level?:
    | "low"
    | "medium"
    | "high"
    | "critical"
    | UnknownEnumStringValue
    | null
  severity?:
    | "none"
    | "note"
    | "warning"
    | "error"
    | UnknownEnumStringValue
    | null
  tags?: string[] | null
}

export type t_code_scanning_alert_set_state =
  | "open"
  | "dismissed"
  | UnknownEnumStringValue

export type t_code_scanning_alert_severity =
  | "critical"
  | "high"
  | "medium"
  | "low"
  | "warning"
  | "note"
  | "error"
  | UnknownEnumStringValue

export type t_code_scanning_alert_state =
  | "open"
  | "dismissed"
  | "fixed"
  | UnknownEnumStringValue
  | null

export type t_code_scanning_alert_state_query =
  | "open"
  | "closed"
  | "dismissed"
  | "fixed"
  | UnknownEnumStringValue

export type t_code_scanning_analysis = {
  analysis_key: t_code_scanning_analysis_analysis_key
  category?: t_code_scanning_analysis_category
  commit_sha: t_code_scanning_analysis_commit_sha
  created_at: t_code_scanning_analysis_created_at
  deletable: boolean
  environment: t_code_scanning_analysis_environment
  error: string
  id: number
  ref: t_code_scanning_ref
  results_count: number
  rules_count: number
  sarif_id: t_code_scanning_analysis_sarif_id
  tool: t_code_scanning_analysis_tool
  url: t_code_scanning_analysis_url
  warning: string
}

export type t_code_scanning_analysis_analysis_key = string

export type t_code_scanning_analysis_category = string

export type t_code_scanning_analysis_commit_sha = string

export type t_code_scanning_analysis_created_at = string

export type t_code_scanning_analysis_deletion = {
  readonly confirm_delete_url: string | null
  readonly next_analysis_url: string | null
}

export type t_code_scanning_analysis_environment = string

export type t_code_scanning_analysis_sarif_file = string

export type t_code_scanning_analysis_sarif_id = string

export type t_code_scanning_analysis_tool = {
  guid?: t_code_scanning_analysis_tool_guid
  name?: t_code_scanning_analysis_tool_name
  version?: t_code_scanning_analysis_tool_version
}

export type t_code_scanning_analysis_tool_guid = string | null

export type t_code_scanning_analysis_tool_name = string

export type t_code_scanning_analysis_tool_version = string | null

export type t_code_scanning_analysis_url = string

export type t_code_scanning_autofix = {
  description: t_code_scanning_autofix_description
  started_at: t_code_scanning_autofix_started_at
  status: t_code_scanning_autofix_status
}

export type t_code_scanning_autofix_commits = {
  message?: string
  target_ref?: string
} | null

export type t_code_scanning_autofix_commits_response = {
  sha?: string
  target_ref?: string
}

export type t_code_scanning_autofix_description = string | null

export type t_code_scanning_autofix_started_at = string

export type t_code_scanning_autofix_status =
  | "pending"
  | "error"
  | "success"
  | "outdated"
  | UnknownEnumStringValue

export type t_code_scanning_codeql_database = {
  commit_oid?: string | null
  content_type: string
  created_at: string
  id: number
  language: string
  name: string
  size: number
  updated_at: string
  uploader: t_simple_user
  url: string
}

export type t_code_scanning_default_setup = {
  languages?: (
    | "actions"
    | "c-cpp"
    | "csharp"
    | "go"
    | "java-kotlin"
    | "javascript-typescript"
    | "javascript"
    | "python"
    | "ruby"
    | "typescript"
    | "swift"
    | UnknownEnumStringValue
  )[]
  query_suite?: "default" | "extended" | UnknownEnumStringValue
  runner_label?: string | null
  runner_type?: "standard" | "labeled" | UnknownEnumStringValue | null
  schedule?: "weekly" | UnknownEnumStringValue | null
  state?: "configured" | "not-configured" | UnknownEnumStringValue
  updated_at?: string | null
}

export type t_code_scanning_default_setup_options = {
  runner_label?: string | null
  runner_type?: "standard" | "labeled" | "not_set" | UnknownEnumStringValue
} | null

export type t_code_scanning_default_setup_update = {
  languages?: (
    | "actions"
    | "c-cpp"
    | "csharp"
    | "go"
    | "java-kotlin"
    | "javascript-typescript"
    | "python"
    | "ruby"
    | "swift"
    | UnknownEnumStringValue
  )[]
  query_suite?: "default" | "extended" | UnknownEnumStringValue
  runner_label?: string | null
  runner_type?: "standard" | "labeled" | UnknownEnumStringValue
  state?: "configured" | "not-configured" | UnknownEnumStringValue
}

export type t_code_scanning_default_setup_update_response = {
  run_id?: number
  run_url?: string
}

export type t_code_scanning_organization_alert_items = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  repository: t_simple_repository
  rule: t_code_scanning_alert_rule_summary
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_ref = string

export type t_code_scanning_ref_full = string

export type t_code_scanning_sarifs_receipt = {
  id?: t_code_scanning_analysis_sarif_id
  readonly url?: string
}

export type t_code_scanning_sarifs_status = {
  readonly analyses_url?: string | null
  readonly errors?: string[] | null
  processing_status?: "pending" | "complete" | "failed" | UnknownEnumStringValue
}

export type t_code_scanning_variant_analysis = {
  actions_workflow_run_id?: number
  actor: t_simple_user
  completed_at?: string | null
  controller_repo: t_simple_repository
  created_at?: string
  failure_reason?:
    | "no_repos_queried"
    | "actions_workflow_run_failed"
    | "internal_error"
    | UnknownEnumStringValue
  id: number
  query_language: t_code_scanning_variant_analysis_language
  query_pack_url: string
  scanned_repositories?: {
    analysis_status: t_code_scanning_variant_analysis_status
    artifact_size_in_bytes?: number
    failure_message?: string
    repository: t_code_scanning_variant_analysis_repository
    result_count?: number
  }[]
  skipped_repositories?: {
    access_mismatch_repos: t_code_scanning_variant_analysis_skipped_repo_group
    no_codeql_db_repos: t_code_scanning_variant_analysis_skipped_repo_group
    not_found_repos: {
      repository_count: number
      repository_full_names: string[]
    }
    over_limit_repos: t_code_scanning_variant_analysis_skipped_repo_group
  }
  status:
    | "in_progress"
    | "succeeded"
    | "failed"
    | "cancelled"
    | UnknownEnumStringValue
  updated_at?: string
}

export type t_code_scanning_variant_analysis_language =
  | "cpp"
  | "csharp"
  | "go"
  | "java"
  | "javascript"
  | "python"
  | "ruby"
  | "rust"
  | "swift"
  | UnknownEnumStringValue

export type t_code_scanning_variant_analysis_repo_task = {
  analysis_status: t_code_scanning_variant_analysis_status
  artifact_size_in_bytes?: number
  artifact_url?: string
  database_commit_sha?: string
  failure_message?: string
  repository: t_simple_repository
  result_count?: number
  source_location_prefix?: string
}

export type t_code_scanning_variant_analysis_repository = {
  full_name: string
  id: number
  name: string
  private: boolean
  stargazers_count: number
  updated_at: string | null
}

export type t_code_scanning_variant_analysis_skipped_repo_group = {
  repositories: t_code_scanning_variant_analysis_repository[]
  repository_count: number
}

export type t_code_scanning_variant_analysis_status =
  | "pending"
  | "in_progress"
  | "succeeded"
  | "failed"
  | "canceled"
  | "timed_out"
  | UnknownEnumStringValue

export type t_code_search_result_item = {
  file_size?: number
  git_url: string
  html_url: string
  language?: string | null
  last_modified_at?: string
  line_numbers?: string[]
  name: string
  path: string
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_code_security_configuration = {
  advanced_security?:
    | "enabled"
    | "disabled"
    | "code_security"
    | "secret_protection"
    | UnknownEnumStringValue
  code_scanning_default_setup?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  code_scanning_default_setup_options?: {
    runner_label?: string | null
    runner_type?:
      | "standard"
      | "labeled"
      | "not_set"
      | UnknownEnumStringValue
      | null
  } | null
  code_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  created_at?: string
  dependabot_alerts?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependabot_security_updates?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  dependency_graph_autosubmit_action?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  dependency_graph_autosubmit_action_options?: {
    labeled_runners?: boolean
  }
  description?: string
  enforcement?: "enforced" | "unenforced" | UnknownEnumStringValue
  html_url?: string
  id?: number
  name?: string
  private_vulnerability_reporting?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning?: "enabled" | "disabled" | "not_set" | UnknownEnumStringValue
  secret_scanning_delegated_alert_dismissal?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_delegated_bypass_options?: {
    reviewers?: {
      reviewer_id: number
      reviewer_type: "TEAM" | "ROLE" | UnknownEnumStringValue
    }[]
  }
  secret_scanning_generic_secrets?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_non_provider_patterns?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_push_protection?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  secret_scanning_validity_checks?:
    | "enabled"
    | "disabled"
    | "not_set"
    | UnknownEnumStringValue
  target_type?:
    | "global"
    | "organization"
    | "enterprise"
    | UnknownEnumStringValue
  updated_at?: string
  url?: string
}

export type t_code_security_configuration_for_repository = {
  configuration?: t_code_security_configuration
  status?:
    | "attached"
    | "attaching"
    | "detached"
    | "removed"
    | "enforced"
    | "failed"
    | "updating"
    | "removed_by_enterprise"
    | UnknownEnumStringValue
}

export type t_code_security_configuration_repositories = {
  repository?: t_simple_repository
  status?:
    | "attached"
    | "attaching"
    | "detached"
    | "removed"
    | "enforced"
    | "failed"
    | "updating"
    | "removed_by_enterprise"
    | UnknownEnumStringValue
}

export type t_code_security_default_configurations = {
  configuration?: t_code_security_configuration
  default_for_new_repos?: EmptyObject
}[]

export type t_codeowners_errors = {
  errors: {
    column: number
    kind: string
    line: number
    message: string
    path: string
    source?: string
    suggestion?: string | null
  }[]
}

export type t_codespace = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: string | null
  display_name?: string | null
  environment_id: string | null
  git_status: {
    ahead?: number
    behind?: number
    has_uncommitted_changes?: boolean
    has_unpushed_changes?: boolean
    ref?: string
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: string | null
  last_known_stop_notice?: string | null
  last_used_at: string
  location:
    | "EastUs"
    | "SouthEastAsia"
    | "WestEurope"
    | "WestUs2"
    | UnknownEnumStringValue
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: boolean | null
  pending_operation_disabled_reason?: string | null
  prebuild: boolean | null
  publish_url?: string | null
  pulls_url: string | null
  recent_folders: string[]
  repository: t_minimal_repository
  retention_expires_at?: string | null
  retention_period_minutes?: number | null
  runtime_constraints?: {
    allowed_port_privacy_settings?: string[] | null
  }
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
    | UnknownEnumStringValue
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespace_export_details = {
  branch?: string | null
  completed_at?: string | null
  export_url?: string
  html_url?: string | null
  id?: string
  sha?: string | null
  state?: string | null
}

export type t_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability:
    | "none"
    | "ready"
    | "in_progress"
    | UnknownEnumStringValue
    | null
  storage_in_bytes: number
}

export type t_codespace_with_full_repository = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: string | null
  display_name?: string | null
  environment_id: string | null
  git_status: {
    ahead?: number
    behind?: number
    has_uncommitted_changes?: boolean
    has_unpushed_changes?: boolean
    ref?: string
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: string | null
  last_used_at: string
  location:
    | "EastUs"
    | "SouthEastAsia"
    | "WestEurope"
    | "WestUs2"
    | UnknownEnumStringValue
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: boolean | null
  pending_operation_disabled_reason?: string | null
  prebuild: boolean | null
  publish_url?: string | null
  pulls_url: string | null
  recent_folders: string[]
  repository: t_full_repository
  retention_expires_at?: string | null
  retention_period_minutes?: number | null
  runtime_constraints?: {
    allowed_port_privacy_settings?: string[] | null
  }
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
    | UnknownEnumStringValue
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespaces_org_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_codespaces_permissions_check_for_devcontainer = {
  accepted: boolean
}

export type t_codespaces_public_key = {
  created_at?: string
  id?: number
  key: string
  key_id: string
  title?: string
  url?: string
}

export type t_codespaces_secret = {
  created_at: string
  name: string
  selected_repositories_url: string
  updated_at: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_codespaces_user_public_key = {
  key: string
  key_id: string
}

export type t_collaborator = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string
}

export type t_combined_billing_usage = {
  days_left_in_billing_cycle: number
  estimated_paid_storage_for_month: number
  estimated_storage_for_month: number
}

export type t_combined_commit_status = {
  commit_url: string
  repository: t_minimal_repository
  sha: string
  state: string
  statuses: t_simple_commit_status[]
  total_count: number
  url: string
}

export type t_commit = {
  author: t_simple_user | t_empty_object | null
  comments_url: string
  commit: {
    author: t_nullable_git_user
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification
  }
  committer: t_simple_user | t_empty_object | null
  files?: t_diff_entry[]
  html_url: string
  node_id: string
  parents: {
    html_url?: string
    sha: string
    url: string
  }[]
  sha: string
  stats?: {
    additions?: number
    deletions?: number
    total?: number
  }
  url: string
}

export type t_commit_activity = {
  days: number[]
  total: number
  week: number
}

export type t_commit_comment = {
  author_association: t_author_association
  body: string
  commit_id: string
  created_at: string
  html_url: string
  id: number
  line: number | null
  node_id: string
  path: string | null
  position: number | null
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_commit_comparison = {
  ahead_by: number
  base_commit: t_commit
  behind_by: number
  commits: t_commit[]
  diff_url: string
  files?: t_diff_entry[]
  html_url: string
  merge_base_commit: t_commit
  patch_url: string
  permalink_url: string
  status: "diverged" | "ahead" | "behind" | "identical" | UnknownEnumStringValue
  total_commits: number
  url: string
}

export type t_commit_search_result_item = {
  author: t_nullable_simple_user
  comments_url: string
  commit: {
    author: {
      date: string
      email: string
      name: string
    }
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification
  }
  committer: t_nullable_git_user
  html_url: string
  node_id: string
  parents: {
    html_url?: string
    sha?: string
    url?: string
  }[]
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_community_profile = {
  content_reports_enabled?: boolean
  description: string | null
  documentation: string | null
  files: {
    code_of_conduct: t_nullable_code_of_conduct_simple
    code_of_conduct_file: t_nullable_community_health_file
    contributing: t_nullable_community_health_file
    issue_template: t_nullable_community_health_file
    license: t_nullable_license_simple
    pull_request_template: t_nullable_community_health_file
    readme: t_nullable_community_health_file
  }
  health_percentage: number
  updated_at: string | null
}

export type t_content_directory = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content?: string
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  type: "dir" | "file" | "submodule" | "symlink" | UnknownEnumStringValue
  url: string
}[]

export type t_content_file = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url?: string
  target?: string
  type: "file" | UnknownEnumStringValue
  url: string
}

export type t_content_submodule = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url: string
  type: "submodule" | UnknownEnumStringValue
  url: string
}

export type t_content_symlink = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  target: string
  type: "symlink" | UnknownEnumStringValue
  url: string
}

export type t_content_traffic = {
  count: number
  path: string
  title: string
  uniques: number
}

export type t_contributor = {
  avatar_url?: string
  contributions: number
  email?: string
  events_url?: string
  followers_url?: string
  following_url?: string
  gists_url?: string
  gravatar_id?: string | null
  html_url?: string
  id?: number
  login?: string
  name?: string
  node_id?: string
  organizations_url?: string
  received_events_url?: string
  repos_url?: string
  site_admin?: boolean
  starred_url?: string
  subscriptions_url?: string
  type: string
  url?: string
  user_view_type?: string
}

export type t_contributor_activity = {
  author: t_nullable_simple_user
  total: number
  weeks: {
    a?: number
    c?: number
    d?: number
    w?: number
  }[]
}

export type t_converted_note_to_issue_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_integration
  project_card?: {
    column_name: string
    id: number
    previous_column_name?: string
    project_id: number
    project_url: string
    url: string
  }
  url: string
}

export type t_copilot_dotcom_chat = {
  models?: {
    custom_model_training_date?: string | null
    is_custom_model?: boolean
    name?: string
    total_chats?: number
    total_engaged_users?: number
  }[]
  total_engaged_users?: number
  [key: string]: unknown | undefined
} | null

export type t_copilot_dotcom_pull_requests = {
  repositories?: {
    models?: {
      custom_model_training_date?: string | null
      is_custom_model?: boolean
      name?: string
      total_engaged_users?: number
      total_pr_summaries_created?: number
    }[]
    name?: string
    total_engaged_users?: number
  }[]
  total_engaged_users?: number
  [key: string]: unknown | undefined
} | null

export type t_copilot_ide_chat = {
  editors?: {
    models?: {
      custom_model_training_date?: string | null
      is_custom_model?: boolean
      name?: string
      total_chat_copy_events?: number
      total_chat_insertion_events?: number
      total_chats?: number
      total_engaged_users?: number
    }[]
    name?: string
    total_engaged_users?: number
  }[]
  total_engaged_users?: number
  [key: string]: unknown | undefined
} | null

export type t_copilot_ide_code_completions = {
  editors?: {
    models?: {
      custom_model_training_date?: string | null
      is_custom_model?: boolean
      languages?: {
        name?: string
        total_code_acceptances?: number
        total_code_lines_accepted?: number
        total_code_lines_suggested?: number
        total_code_suggestions?: number
        total_engaged_users?: number
      }[]
      name?: string
      total_engaged_users?: number
    }[]
    name?: string
    total_engaged_users?: number
    [key: string]: unknown | undefined
  }[]
  languages?: {
    name?: string
    total_engaged_users?: number
  }[]
  total_engaged_users?: number
  [key: string]: unknown | undefined
} | null

export type t_copilot_organization_details = {
  cli?: "enabled" | "disabled" | "unconfigured" | UnknownEnumStringValue
  ide_chat?: "enabled" | "disabled" | "unconfigured" | UnknownEnumStringValue
  plan_type?: "business" | "enterprise" | UnknownEnumStringValue
  platform_chat?:
    | "enabled"
    | "disabled"
    | "unconfigured"
    | UnknownEnumStringValue
  public_code_suggestions:
    | "allow"
    | "block"
    | "unconfigured"
    | UnknownEnumStringValue
  seat_breakdown: t_copilot_organization_seat_breakdown
  seat_management_setting:
    | "assign_all"
    | "assign_selected"
    | "disabled"
    | "unconfigured"
    | UnknownEnumStringValue
  [key: string]: unknown | undefined
}

export type t_copilot_organization_seat_breakdown = {
  active_this_cycle?: number
  added_this_cycle?: number
  inactive_this_cycle?: number
  pending_cancellation?: number
  pending_invitation?: number
  total?: number
}

export type t_copilot_seat_details = {
  assignee?: t_nullable_simple_user
  assigning_team?: t_team | t_enterprise_team | null
  created_at: string
  last_activity_at?: string | null
  last_activity_editor?: string | null
  organization?: t_nullable_organization_simple
  pending_cancellation_date?: string | null
  plan_type?: "business" | "enterprise" | "unknown" | UnknownEnumStringValue
  updated_at?: string
}

export type t_copilot_usage_metrics_day = {
  copilot_dotcom_chat?: t_copilot_dotcom_chat
  copilot_dotcom_pull_requests?: t_copilot_dotcom_pull_requests
  copilot_ide_chat?: t_copilot_ide_chat
  copilot_ide_code_completions?: t_copilot_ide_code_completions
  date: string
  total_active_users?: number
  total_engaged_users?: number
  [key: string]: unknown | undefined
}

export type t_custom_deployment_rule_app = {
  id: number
  integration_url: string
  node_id: string
  slug: string
}

export type t_custom_property = {
  allowed_values?: string[] | null
  default_value?: string | string[] | null
  description?: string | null
  property_name: string
  required?: boolean
  source_type?: "organization" | "enterprise" | UnknownEnumStringValue
  url?: string
  value_type:
    | "string"
    | "single_select"
    | "multi_select"
    | "true_false"
    | UnknownEnumStringValue
  values_editable_by?:
    | "org_actors"
    | "org_and_repo_actors"
    | UnknownEnumStringValue
    | null
}

export type t_custom_property_set_payload = {
  allowed_values?: string[] | null
  default_value?: string | string[] | null
  description?: string | null
  required?: boolean
  value_type:
    | "string"
    | "single_select"
    | "multi_select"
    | "true_false"
    | UnknownEnumStringValue
  values_editable_by?:
    | "org_actors"
    | "org_and_repo_actors"
    | UnknownEnumStringValue
    | null
}

export type t_custom_property_value = {
  property_name: string
  value: string | string[] | null
}

export type t_cvss_severities = {
  cvss_v3?: {
    readonly score: number | null
    vector_string: string | null
  } | null
  cvss_v4?: {
    readonly score: number | null
    vector_string: string | null
  } | null
} | null

export type t_demilestoned_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  milestone: {
    title: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_dependabot_alert = {
  auto_dismissed_at?: t_alert_auto_dismissed_at
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string
    package?: t_dependabot_alert_package
    readonly relationship?:
      | "unknown"
      | "direct"
      | "transitive"
      | UnknownEnumStringValue
      | null
    readonly scope?: "development" | "runtime" | UnknownEnumStringValue | null
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | UnknownEnumStringValue
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state:
    | "auto_dismissed"
    | "dismissed"
    | "fixed"
    | "open"
    | UnknownEnumStringValue
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_alert_package = {
  readonly ecosystem: string
  readonly name: string
}

export type t_dependabot_alert_security_advisory = {
  readonly cve_id: string | null
  readonly cvss: {
    readonly score: number
    readonly vector_string: string | null
  }
  cvss_severities?: t_cvss_severities
  readonly cwes: {
    readonly cwe_id: string
    readonly name: string
  }[]
  readonly description: string
  epss?: t_security_advisory_epss
  readonly ghsa_id: string
  readonly identifiers: {
    readonly type: "CVE" | "GHSA" | UnknownEnumStringValue
    readonly value: string
  }[]
  readonly published_at: string
  readonly references: {
    readonly url: string
  }[]
  readonly severity:
    | "low"
    | "medium"
    | "high"
    | "critical"
    | UnknownEnumStringValue
  readonly summary: string
  readonly updated_at: string
  readonly vulnerabilities: t_dependabot_alert_security_vulnerability[]
  readonly withdrawn_at: string | null
}

export type t_dependabot_alert_security_vulnerability = {
  readonly first_patched_version: {
    readonly identifier: string
  } | null
  package: t_dependabot_alert_package
  readonly severity:
    | "low"
    | "medium"
    | "high"
    | "critical"
    | UnknownEnumStringValue
  readonly vulnerable_version_range: string
}

export type t_dependabot_alert_with_repository = {
  auto_dismissed_at?: t_alert_auto_dismissed_at
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string
    package?: t_dependabot_alert_package
    readonly relationship?:
      | "unknown"
      | "direct"
      | "transitive"
      | UnknownEnumStringValue
      | null
    readonly scope?: "development" | "runtime" | UnknownEnumStringValue | null
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | UnknownEnumStringValue
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  repository: t_simple_repository
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state:
    | "auto_dismissed"
    | "dismissed"
    | "fixed"
    | "open"
    | UnknownEnumStringValue
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_public_key = {
  key: string
  key_id: string
}

export type t_dependabot_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_dependency = {
  dependencies?: string[]
  metadata?: t_metadata
  package_url?: string
  relationship?: "direct" | "indirect" | UnknownEnumStringValue
  scope?: "runtime" | "development" | UnknownEnumStringValue
}

export type t_dependency_graph_diff = {
  change_type: "added" | "removed" | UnknownEnumStringValue
  ecosystem: string
  license: string | null
  manifest: string
  name: string
  package_url: string | null
  scope: "unknown" | "runtime" | "development" | UnknownEnumStringValue
  source_repository_url: string | null
  version: string
  vulnerabilities: {
    advisory_ghsa_id: string
    advisory_summary: string
    advisory_url: string
    severity: string
  }[]
}[]

export type t_dependency_graph_spdx_sbom = {
  sbom: {
    SPDXID: string
    comment?: string
    creationInfo: {
      created: string
      creators: string[]
    }
    dataLicense: string
    documentNamespace: string
    name: string
    packages: {
      SPDXID?: string
      copyrightText?: string
      downloadLocation?: string
      externalRefs?: {
        referenceCategory: string
        referenceLocator: string
        referenceType: string
      }[]
      filesAnalyzed?: boolean
      licenseConcluded?: string
      licenseDeclared?: string
      name?: string
      supplier?: string
      versionInfo?: string
    }[]
    relationships?: {
      relatedSpdxElement?: string
      relationshipType?: string
      spdxElementId?: string
    }[]
    spdxVersion: string
  }
}

export type t_deploy_key = {
  added_by?: string | null
  created_at: string
  enabled?: boolean
  id: number
  key: string
  last_used?: string | null
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_deployment = {
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string
  payload:
    | {
        [key: string]: unknown | undefined
      }
    | string
  performed_via_github_app?: t_nullable_integration
  production_environment?: boolean
  ref: string
  repository_url: string
  sha: string
  statuses_url: string
  task: string
  transient_environment?: boolean
  updated_at: string
  url: string
}

export type t_deployment_branch_policy = {
  id?: number
  name?: string
  node_id?: string
  type?: "branch" | "tag" | UnknownEnumStringValue
}

export type t_deployment_branch_policy_name_pattern = {
  name: string
}

export type t_deployment_branch_policy_name_pattern_with_type = {
  name: string
  type?: "branch" | "tag" | UnknownEnumStringValue
}

export type t_deployment_branch_policy_settings = {
  custom_branch_policies: boolean
  protected_branches: boolean
} | null

export type t_deployment_protection_rule = {
  app: t_custom_deployment_rule_app
  enabled: boolean
  id: number
  node_id: string
}

export type t_deployment_reviewer_type =
  | "User"
  | "Team"
  | UnknownEnumStringValue

export type t_deployment_simple = {
  created_at: string
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string
  performed_via_github_app?: t_nullable_integration
  production_environment?: boolean
  repository_url: string
  statuses_url: string
  task: string
  transient_environment?: boolean
  updated_at: string
  url: string
}

export type t_deployment_status = {
  created_at: string
  creator: t_nullable_simple_user
  deployment_url: string
  description: string
  environment?: string
  environment_url?: string
  id: number
  log_url?: string
  node_id: string
  performed_via_github_app?: t_nullable_integration
  repository_url: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "pending"
    | "success"
    | "queued"
    | "in_progress"
    | UnknownEnumStringValue
  target_url: string
  updated_at: string
  url: string
}

export type t_diff_entry = {
  additions: number
  blob_url: string
  changes: number
  contents_url: string
  deletions: number
  filename: string
  patch?: string
  previous_filename?: string
  raw_url: string
  sha: string
  status:
    | "added"
    | "removed"
    | "modified"
    | "renamed"
    | "copied"
    | "changed"
    | "unchanged"
    | UnknownEnumStringValue
}

export type t_email = {
  email: string
  primary: boolean
  verified: boolean
  visibility: string | null
}

export type t_empty_object = EmptyObject

export type t_enabled_repositories =
  | "all"
  | "none"
  | "selected"
  | UnknownEnumStringValue

export type t_enterprise = {
  avatar_url: string
  created_at: string | null
  description?: string | null
  html_url: string
  id: number
  name: string
  node_id: string
  slug: string
  updated_at: string | null
  website_url?: string | null
}

export type t_enterprise_team = {
  created_at: string
  group_id?: string | null
  group_name?: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  slug: string
  sync_to_organizations: string
  updated_at: string
  url: string
}

export type t_environment = {
  created_at: string
  deployment_branch_policy?: t_deployment_branch_policy_settings
  html_url: string
  id: number
  name: string
  node_id: string
  protection_rules?: (
    | {
        id: number
        node_id: string
        type: string
        wait_timer?: t_wait_timer
      }
    | {
        id: number
        node_id: string
        prevent_self_review?: boolean
        reviewers?: {
          reviewer?: t_simple_user | t_team
          type?: t_deployment_reviewer_type
        }[]
        type: string
      }
    | {
        id: number
        node_id: string
        type: string
      }
  )[]
  updated_at: string
  url: string
}

export type t_environment_approvals = {
  comment: string
  environments: {
    created_at?: string
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    updated_at?: string
    url?: string
  }[]
  state: "approved" | "rejected" | "pending" | UnknownEnumStringValue
  user: t_simple_user
}

export type t_event = {
  actor: t_actor
  created_at: string | null
  id: string
  org?: t_actor
  payload: {
    action?: string
    comment?: t_issue_comment
    issue?: t_issue
    pages?: {
      action?: string
      html_url?: string
      page_name?: string
      sha?: string
      summary?: string | null
      title?: string
    }[]
  }
  public: boolean
  repo: {
    id: number
    name: string
    url: string
  }
  type: string | null
}

export type t_feed = {
  _links: {
    current_user?: t_link_with_type
    current_user_actor?: t_link_with_type
    current_user_organization?: t_link_with_type
    current_user_organizations?: t_link_with_type[]
    current_user_public?: t_link_with_type
    repository_discussions?: t_link_with_type
    repository_discussions_category?: t_link_with_type
    security_advisories?: t_link_with_type
    timeline: t_link_with_type
    user: t_link_with_type
  }
  current_user_actor_url?: string
  current_user_organization_url?: string
  current_user_organization_urls?: string[]
  current_user_public_url?: string
  current_user_url?: string
  repository_discussions_category_url?: string
  repository_discussions_url?: string
  security_advisories_url?: string
  timeline_url: string
  user_url: string
}

export type t_file_commit = {
  commit: {
    author?: {
      date?: string
      email?: string
      name?: string
    }
    committer?: {
      date?: string
      email?: string
      name?: string
    }
    html_url?: string
    message?: string
    node_id?: string
    parents?: {
      html_url?: string
      sha?: string
      url?: string
    }[]
    sha?: string
    tree?: {
      sha?: string
      url?: string
    }
    url?: string
    verification?: {
      payload?: string | null
      reason?: string
      signature?: string | null
      verified?: boolean
      verified_at?: string | null
    }
  }
  content: {
    _links?: {
      git?: string
      html?: string
      self?: string
    }
    download_url?: string
    git_url?: string
    html_url?: string
    name?: string
    path?: string
    sha?: string
    size?: number
    type?: string
    url?: string
  } | null
}

export type t_full_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  code_of_conduct?: t_code_of_conduct_simple
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  custom_properties?: {
    [key: string]: unknown | undefined
  }
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions: boolean
  has_downloads?: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  organization?: t_nullable_simple_user
  owner: t_simple_user
  parent?: t_repository
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  security_and_analysis?: t_security_and_analysis
  size: number
  source?: t_repository
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | null
  template_repository?: t_nullable_repository
  topics?: string[]
  trees_url: string
  updated_at: string
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_gist_comment = {
  author_association: t_author_association
  body: string
  created_at: string
  id: number
  node_id: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_gist_commit = {
  change_status: {
    additions?: number
    deletions?: number
    total?: number
  }
  committed_at: string
  url: string
  user: t_nullable_simple_user
  version: string
}

export type t_gist_history = {
  change_status?: {
    additions?: number
    deletions?: number
    total?: number
  }
  committed_at?: string
  url?: string
  user?: t_nullable_simple_user
  version?: string
}

export type t_gist_simple = {
  comments?: number
  comments_enabled?: boolean
  comments_url?: string
  commits_url?: string
  created_at?: string
  description?: string | null
  files?: {
    [key: string]:
      | ({
          content?: string
          encoding?: string
          filename?: string
          language?: string
          raw_url?: string
          size?: number
          truncated?: boolean
          type?: string
        } | null)
      | undefined
  }
  fork_of?: {
    comments: number
    comments_enabled?: boolean
    comments_url: string
    commits_url: string
    created_at: string
    description: string | null
    files: {
      [key: string]:
        | {
            filename?: string
            language?: string
            raw_url?: string
            size?: number
            type?: string
          }
        | undefined
    }
    forks?: unknown[]
    forks_url: string
    git_pull_url: string
    git_push_url: string
    history?: unknown[]
    html_url: string
    id: string
    node_id: string
    owner?: t_nullable_simple_user
    public: boolean
    truncated?: boolean
    updated_at: string
    url: string
    user: t_nullable_simple_user
  } | null
  forks?:
    | {
        created_at?: string
        id?: string
        updated_at?: string
        url?: string
        user?: t_public_user
      }[]
    | null
  forks_url?: string
  git_pull_url?: string
  git_push_url?: string
  history?: t_gist_history[] | null
  html_url?: string
  id?: string
  node_id?: string
  owner?: t_simple_user
  public?: boolean
  truncated?: boolean
  updated_at?: string
  url?: string
  user?: string | null
}

export type t_git_commit = {
  author: {
    date: string
    email: string
    name: string
  }
  committer: {
    date: string
    email: string
    name: string
  }
  html_url: string
  message: string
  node_id: string
  parents: {
    html_url: string
    sha: string
    url: string
  }[]
  sha: string
  tree: {
    sha: string
    url: string
  }
  url: string
  verification: {
    payload: string | null
    reason: string
    signature: string | null
    verified: boolean
    verified_at: string | null
  }
}

export type t_git_ref = {
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  ref: string
  url: string
}

export type t_git_tag = {
  message: string
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  sha: string
  tag: string
  tagger: {
    date: string
    email: string
    name: string
  }
  url: string
  verification?: t_verification
}

export type t_git_tree = {
  sha: string
  tree: {
    mode: string
    path: string
    sha: string
    size?: number
    type: string
    url?: string
  }[]
  truncated: boolean
  url?: string
}

export type t_gitignore_template = {
  name: string
  source: string
}

export type t_global_advisory = {
  readonly credits:
    | {
        type: t_security_advisory_credit_types
        user: t_simple_user
      }[]
    | null
  readonly cve_id: string | null
  cvss: {
    readonly score: number | null
    vector_string: string | null
  } | null
  cvss_severities?: t_cvss_severities
  cwes:
    | {
        cwe_id: string
        readonly name: string
      }[]
    | null
  description: string | null
  epss?: t_security_advisory_epss
  readonly ghsa_id: string
  readonly github_reviewed_at: string | null
  readonly html_url: string
  readonly identifiers:
    | {
        type: "CVE" | "GHSA" | UnknownEnumStringValue
        value: string
      }[]
    | null
  readonly nvd_published_at: string | null
  readonly published_at: string
  references: string[] | null
  readonly repository_advisory_url: string | null
  severity:
    | "critical"
    | "high"
    | "medium"
    | "low"
    | "unknown"
    | UnknownEnumStringValue
  source_code_location: string | null
  summary: string
  readonly type: "reviewed" | "unreviewed" | "malware" | UnknownEnumStringValue
  readonly updated_at: string
  readonly url: string
  vulnerabilities: t_vulnerability[] | null
  readonly withdrawn_at: string | null
}

export type t_gpg_key = {
  can_certify: boolean
  can_encrypt_comms: boolean
  can_encrypt_storage: boolean
  can_sign: boolean
  created_at: string
  emails: {
    email?: string
    verified?: boolean
  }[]
  expires_at: string | null
  id: number
  key_id: string
  name?: string | null
  primary_key_id: number | null
  public_key: string
  raw_key: string | null
  revoked: boolean
  subkeys: {
    can_certify?: boolean
    can_encrypt_comms?: boolean
    can_encrypt_storage?: boolean
    can_sign?: boolean
    created_at?: string
    emails?: {
      email?: string
      verified?: boolean
    }[]
    expires_at?: string | null
    id?: number
    key_id?: string
    primary_key_id?: number
    public_key?: string
    raw_key?: string | null
    revoked?: boolean
    subkeys?: unknown[]
  }[]
}

export type t_hook = {
  active: boolean
  config: t_webhook_config
  created_at: string
  deliveries_url?: string
  events: string[]
  id: number
  last_response: t_hook_response
  name: string
  ping_url: string
  test_url: string
  type: string
  updated_at: string
  url: string
}

export type t_hook_delivery = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  request: {
    headers: {
      [key: string]: unknown | undefined
    } | null
    payload: {
      [key: string]: unknown | undefined
    } | null
  }
  response: {
    headers: {
      [key: string]: unknown | undefined
    } | null
    payload: string | null
  }
  status: string
  status_code: number
  throttled_at?: string | null
  url?: string
}

export type t_hook_delivery_item = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  status: string
  status_code: number
  throttled_at?: string | null
}

export type t_hook_response = {
  code: number | null
  message: string | null
  status: string | null
}

export type t_hovercard = {
  contexts: {
    message: string
    octicon: string
  }[]
}

export type t_import = {
  authors_count?: number | null
  authors_url: string
  commit_count?: number | null
  error_message?: string | null
  failed_step?: string | null
  has_large_files?: boolean
  html_url: string
  import_percent?: number | null
  large_files_count?: number
  large_files_size?: number
  message?: string
  project_choices?: {
    human_name?: string
    tfvc_project?: string
    vcs?: string
  }[]
  push_percent?: number | null
  repository_url: string
  status:
    | "auth"
    | "error"
    | "none"
    | "detecting"
    | "choose"
    | "auth_failed"
    | "importing"
    | "mapping"
    | "waiting_to_push"
    | "pushing"
    | "complete"
    | "setup"
    | "unknown"
    | "detection_found_multiple"
    | "detection_found_nothing"
    | "detection_needs_auth"
    | UnknownEnumStringValue
  status_text?: string | null
  svc_root?: string
  svn_root?: string
  tfvc_project?: string
  url: string
  use_lfs?: boolean
  vcs: string | null
  vcs_url: string
}

export type t_installation = {
  access_tokens_url: string
  account: t_simple_user | t_enterprise | null
  app_id: number
  app_slug: string
  contact_email?: string | null
  created_at: string
  events: string[]
  has_multiple_single_files?: boolean
  html_url: string
  id: number
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected" | UnknownEnumStringValue
  single_file_name: string | null
  single_file_paths?: string[]
  suspended_at: string | null
  suspended_by: t_nullable_simple_user
  target_id: number
  target_type: string
  updated_at: string
}

export type t_installation_token = {
  expires_at: string
  has_multiple_single_files?: boolean
  permissions?: t_app_permissions
  repositories?: t_repository[]
  repository_selection?: "all" | "selected" | UnknownEnumStringValue
  single_file?: string
  single_file_paths?: string[]
  token: string
}

export type t_integration = {
  client_id?: string
  client_secret?: string
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number
  name: string
  node_id: string
  owner: t_simple_user | t_enterprise
  pem?: string
  permissions: {
    checks?: string
    contents?: string
    deployments?: string
    issues?: string
    metadata?: string
    [key: string]: string | undefined
  }
  slug?: string
  updated_at: string
  webhook_secret?: string | null
} | null

export type t_integration_installation_request = {
  account: t_simple_user | t_enterprise
  created_at: string
  id: number
  node_id?: string
  requester: t_simple_user
}

export type t_interaction_expiry =
  | "one_day"
  | "three_days"
  | "one_week"
  | "one_month"
  | "six_months"
  | UnknownEnumStringValue

export type t_interaction_group =
  | "existing_users"
  | "contributors_only"
  | "collaborators_only"
  | UnknownEnumStringValue

export type t_interaction_limit = {
  expiry?: t_interaction_expiry
  limit: t_interaction_group
}

export type t_interaction_limit_response = {
  expires_at: string
  limit: t_interaction_group
  origin: string
}

export type t_issue = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string | null
  body_html?: string
  body_text?: string
  closed_at: string | null
  closed_by?: t_nullable_simple_user
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: string | null
        default?: boolean
        description?: string | null
        id?: number
        name?: string
        node_id?: string
        url?: string
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  state: string
  state_reason?:
    | "completed"
    | "reopened"
    | "not_planned"
    | UnknownEnumStringValue
    | null
  sub_issues_summary?: t_sub_issues_summary
  timeline_url?: string
  title: string
  type?: t_issue_type
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_comment = {
  author_association: t_author_association
  body?: string
  body_html?: string
  body_text?: string
  created_at: string
  html_url: string
  id: number
  issue_url: string
  node_id: string
  performed_via_github_app?: t_nullable_integration
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_event = {
  actor: t_nullable_simple_user
  assignee?: t_nullable_simple_user
  assigner?: t_nullable_simple_user
  author_association?: t_author_association
  commit_id: string | null
  commit_url: string | null
  created_at: string
  dismissed_review?: t_issue_event_dismissed_review
  event: string
  id: number
  issue?: t_nullable_issue
  label?: t_issue_event_label
  lock_reason?: string | null
  milestone?: t_issue_event_milestone
  node_id: string
  performed_via_github_app?: t_nullable_integration
  project_card?: t_issue_event_project_card
  rename?: t_issue_event_rename
  requested_reviewer?: t_nullable_simple_user
  requested_team?: t_team
  review_requester?: t_nullable_simple_user
  url: string
}

export type t_issue_event_dismissed_review = {
  dismissal_commit_id?: string | null
  dismissal_message: string | null
  review_id: number
  state: string
}

export type t_issue_event_for_issue =
  | t_labeled_issue_event
  | t_unlabeled_issue_event
  | t_assigned_issue_event
  | t_unassigned_issue_event
  | t_milestoned_issue_event
  | t_demilestoned_issue_event
  | t_renamed_issue_event
  | t_review_requested_issue_event
  | t_review_request_removed_issue_event
  | t_review_dismissed_issue_event
  | t_locked_issue_event
  | t_added_to_project_issue_event
  | t_moved_column_in_project_issue_event
  | t_removed_from_project_issue_event
  | t_converted_note_to_issue_issue_event

export type t_issue_event_label = {
  color: string | null
  name: string | null
}

export type t_issue_event_milestone = {
  title: string
}

export type t_issue_event_project_card = {
  column_name: string
  id: number
  previous_column_name?: string
  project_id: number
  project_url: string
  url: string
}

export type t_issue_event_rename = {
  from: string
  to: string
}

export type t_issue_search_result_item = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string
  body_html?: string
  body_text?: string
  closed_at: string | null
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: {
    color?: string
    default?: boolean
    description?: string | null
    id?: number
    name?: string
    node_id?: string
    url?: string
  }[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  score: number
  state: string
  state_reason?: string | null
  sub_issues_summary?: {
    completed: number
    percent_completed: number
    total: number
  }
  text_matches?: t_search_result_text_matches
  timeline_url?: string
  title: string
  type?: t_issue_type
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_type = {
  color?:
    | "gray"
    | "blue"
    | "green"
    | "yellow"
    | "orange"
    | "red"
    | "pink"
    | "purple"
    | UnknownEnumStringValue
    | null
  created_at?: string
  description: string | null
  id: number
  is_enabled?: boolean
  name: string
  node_id: string
  updated_at?: string
} | null

export type t_job = {
  check_run_url: string
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | UnknownEnumStringValue
    | null
  created_at: string
  head_branch: string | null
  head_sha: string
  html_url: string | null
  id: number
  labels: string[]
  name: string
  node_id: string
  run_attempt?: number
  run_id: number
  run_url: string
  runner_group_id: number | null
  runner_group_name: string | null
  runner_id: number | null
  runner_name: string | null
  started_at: string
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
    | UnknownEnumStringValue
  steps?: {
    completed_at?: string | null
    conclusion: string | null
    name: string
    number: number
    started_at?: string | null
    status: "queued" | "in_progress" | "completed" | UnknownEnumStringValue
  }[]
  url: string
  workflow_name: string | null
}

export type t_key = {
  created_at: string
  id: number
  key: string
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_key_simple = {
  id: number
  key: string
}

export type t_label = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  url: string
}

export type t_label_search_result_item = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  score: number
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_labeled_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  label: {
    color: string
    name: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_language = {
  [key: string]: number | undefined
}

export type t_license = {
  body: string
  conditions: string[]
  description: string
  featured: boolean
  html_url: string
  implementation: string
  key: string
  limitations: string[]
  name: string
  node_id: string
  permissions: string[]
  spdx_id: string | null
  url: string | null
}

export type t_license_content = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  license: t_nullable_license_simple
  name: string
  path: string
  sha: string
  size: number
  type: string
  url: string
}

export type t_license_simple = {
  html_url?: string
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
}

export type t_link = {
  href: string
}

export type t_link_with_type = {
  href: string
  type: string
}

export type t_locked_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  lock_reason: string | null
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_manifest = {
  file?: {
    source_location?: string
  }
  metadata?: t_metadata
  name: string
  resolved?: {
    [key: string]: t_dependency | undefined
  }
}

export type t_marketplace_account = {
  email?: string | null
  id: number
  login: string
  node_id?: string
  organization_billing_email?: string | null
  type: string
  url: string
}

export type t_marketplace_listing_plan = {
  accounts_url: string
  bullets: string[]
  description: string
  has_free_trial: boolean
  id: number
  monthly_price_in_cents: number
  name: string
  number: number
  price_model: "FREE" | "FLAT_RATE" | "PER_UNIT" | UnknownEnumStringValue
  state: string
  unit_name: string | null
  url: string
  yearly_price_in_cents: number
}

export type t_marketplace_purchase = {
  email?: string | null
  id: number
  login: string
  marketplace_pending_change?: {
    effective_date?: string
    id?: number
    is_installed?: boolean
    plan?: t_marketplace_listing_plan
    unit_count?: number | null
  } | null
  marketplace_purchase: {
    billing_cycle?: string
    free_trial_ends_on?: string | null
    is_installed?: boolean
    next_billing_date?: string | null
    on_free_trial?: boolean
    plan?: t_marketplace_listing_plan
    unit_count?: number | null
    updated_at?: string
  }
  organization_billing_email?: string
  type: string
  url: string
}

export type t_merged_upstream = {
  base_branch?: string
  merge_type?: "merge" | "fast-forward" | "none" | UnknownEnumStringValue
  message?: string
}

export type t_metadata = {
  [key: string]: (string | number | boolean | null) | undefined
}

export type t_migration = {
  archive_url?: string
  created_at: string
  exclude?: string[]
  exclude_attachments: boolean
  exclude_git_data: boolean
  exclude_metadata: boolean
  exclude_owner_projects: boolean
  exclude_releases: boolean
  guid: string
  id: number
  lock_repositories: boolean
  node_id: string
  org_metadata_only: boolean
  owner: t_nullable_simple_user
  repositories: t_repository[]
  state: string
  updated_at: string
  url: string
}

export type t_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed" | UnknownEnumStringValue
  title: string
  updated_at: string
  url: string
}

export type t_milestoned_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  milestone: {
    title: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_minimal_repository = {
  allow_forking?: boolean
  archive_url: string
  archived?: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string
  code_of_conduct?: t_code_of_conduct
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: string | null
  default_branch?: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled?: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number
  forks_count?: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_pages?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: string | null
  languages_url: string
  license?: {
    key?: string
    name?: string
    node_id?: string
    spdx_id?: string
    url?: string
  } | null
  merges_url: string
  milestones_url: string
  mirror_url?: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues?: number
  open_issues_count?: number
  owner: t_simple_user
  permissions?: {
    admin?: boolean
    maintain?: boolean
    pull?: boolean
    push?: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at?: string | null
  releases_url: string
  role_name?: string
  security_and_analysis?: t_security_and_analysis
  size?: number
  ssh_url?: string
  stargazers_count?: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url?: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at?: string | null
  url: string
  visibility?: string
  watchers?: number
  watchers_count?: number
  web_commit_signoff_required?: boolean
}

export type t_moved_column_in_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?: {
    column_name: string
    id: number
    previous_column_name?: string
    project_id: number
    project_url: string
    url: string
  }
  url: string
}

export type t_network_configuration = {
  compute_service?: "none" | "actions" | "codespaces" | UnknownEnumStringValue
  created_on: string | null
  id: string
  name: string
  network_settings_ids?: string[]
}

export type t_network_settings = {
  id: string
  name: string
  network_configuration_id?: string
  region: string
  subnet_id: string
}

export type t_nullable_actions_hosted_runner_pool_image = {
  display_name: string
  id: string
  size_gb: number
  source: "github" | "partner" | "custom" | UnknownEnumStringValue
} | null

export type t_nullable_alert_updated_at = string | null

export type t_nullable_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
} | null

export type t_nullable_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability:
    | "none"
    | "ready"
    | "in_progress"
    | UnknownEnumStringValue
    | null
  storage_in_bytes: number
} | null

export type t_nullable_collaborator = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string
} | null

export type t_nullable_community_health_file = {
  html_url: string
  url: string
} | null

export type t_nullable_git_user = {
  date?: string
  email?: string
  name?: string
} | null

export type t_nullable_integration = {
  client_id?: string
  client_secret?: string
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number
  name: string
  node_id: string
  owner: t_simple_user | t_enterprise
  pem?: string
  permissions: {
    checks?: string
    contents?: string
    deployments?: string
    issues?: string
    metadata?: string
    [key: string]: string | undefined
  }
  slug?: string
  updated_at: string
  webhook_secret?: string | null
} | null

export type t_nullable_issue = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string | null
  body_html?: string
  body_text?: string
  closed_at: string | null
  closed_by?: t_nullable_simple_user
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: string | null
        default?: boolean
        description?: string | null
        id?: number
        name?: string
        node_id?: string
        url?: string
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  state: string
  state_reason?:
    | "completed"
    | "reopened"
    | "not_planned"
    | UnknownEnumStringValue
    | null
  sub_issues_summary?: t_sub_issues_summary
  timeline_url?: string
  title: string
  type?: t_issue_type
  updated_at: string
  url: string
  user: t_nullable_simple_user
} | null

export type t_nullable_license_simple = {
  html_url?: string
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
} | null

export type t_nullable_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed" | UnknownEnumStringValue
  title: string
  updated_at: string
  url: string
} | null

export type t_nullable_minimal_repository = {
  allow_forking?: boolean
  archive_url: string
  archived?: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string
  code_of_conduct?: t_code_of_conduct
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: string | null
  default_branch?: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled?: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number
  forks_count?: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_pages?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: string | null
  languages_url: string
  license?: {
    key?: string
    name?: string
    node_id?: string
    spdx_id?: string
    url?: string
  } | null
  merges_url: string
  milestones_url: string
  mirror_url?: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues?: number
  open_issues_count?: number
  owner: t_simple_user
  permissions?: {
    admin?: boolean
    maintain?: boolean
    pull?: boolean
    push?: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at?: string | null
  releases_url: string
  role_name?: string
  security_and_analysis?: t_security_and_analysis
  size?: number
  ssh_url?: string
  stargazers_count?: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url?: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at?: string | null
  url: string
  visibility?: string
  watchers?: number
  watchers_count?: number
  web_commit_signoff_required?: boolean
} | null

export type t_nullable_organization_simple = {
  avatar_url: string
  description: string | null
  events_url: string
  hooks_url: string
  id: number
  issues_url: string
  login: string
  members_url: string
  node_id: string
  public_members_url: string
  repos_url: string
  url: string
} | null

export type t_nullable_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
} | null

export type t_nullable_scoped_installation = {
  account: t_simple_user
  has_multiple_single_files?: boolean
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected" | UnknownEnumStringValue
  single_file_name: string | null
  single_file_paths?: string[]
} | null

export type t_nullable_simple_commit = {
  author: {
    email: string
    name: string
  } | null
  committer: {
    email: string
    name: string
  } | null
  id: string
  message: string
  timestamp: string
  tree_id: string
} | null

export type t_nullable_simple_user = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string
} | null

export type t_nullable_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_url: string
  name: string
  node_id: string
  notification_setting?: string
  permission: string
  privacy?: string
  repositories_url: string
  slug: string
  url: string
} | null

export type t_oidc_custom_sub = {
  include_claim_keys: string[]
}

export type t_oidc_custom_sub_repo = {
  include_claim_keys?: string[]
  use_default: boolean
}

export type t_org_hook = {
  active: boolean
  config: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url?: string
  }
  created_at: string
  deliveries_url?: string
  events: string[]
  id: number
  name: string
  ping_url: string
  type: string
  updated_at: string
  url: string
}

export type t_org_membership = {
  organization: t_organization_simple
  organization_url: string
  permissions?: {
    can_create_repository: boolean
  }
  role: "admin" | "member" | "billing_manager" | UnknownEnumStringValue
  state: "active" | "pending" | UnknownEnumStringValue
  url: string
  user: t_nullable_simple_user
}

export type t_org_private_registry_configuration = {
  created_at: string
  name: string
  registry_type: "maven_repository" | UnknownEnumStringValue
  updated_at: string
  username?: string | null
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_org_private_registry_configuration_with_selected_repositories = {
  created_at: string
  name: string
  registry_type: "maven_repository" | UnknownEnumStringValue
  selected_repository_ids?: number[]
  updated_at: string
  username?: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_org_repo_custom_property_values = {
  properties: t_custom_property_value[]
  repository_full_name: string
  repository_id: number
  repository_name: string
}

export type t_org_ruleset_conditions =
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_name_target)
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_id_target)
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_property_target)

export type t_organization_actions_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_organization_actions_variable = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  value: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_organization_create_issue_type = {
  color?:
    | "gray"
    | "blue"
    | "green"
    | "yellow"
    | "orange"
    | "red"
    | "pink"
    | "purple"
    | UnknownEnumStringValue
    | null
  description?: string | null
  is_enabled: boolean
  name: string
}

export type t_organization_dependabot_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_organization_full = {
  advanced_security_enabled_for_new_repositories?: boolean
  archived_at: string | null
  avatar_url: string
  billing_email?: string | null
  blog?: string
  collaborators?: number | null
  company?: string
  created_at: string
  default_repository_permission?: string | null
  dependabot_alerts_enabled_for_new_repositories?: boolean
  dependabot_security_updates_enabled_for_new_repositories?: boolean
  dependency_graph_enabled_for_new_repositories?: boolean
  deploy_keys_enabled_for_repositories?: boolean
  description: string | null
  disk_usage?: number | null
  email?: string
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean
  issues_url: string
  location?: string
  login: string
  members_allowed_repository_creation_type?: string
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean | null
  members_can_fork_private_repositories?: boolean | null
  members_url: string
  name?: string
  node_id: string
  owned_private_repos?: number
  plan?: {
    filled_seats?: number
    name: string
    private_repos: number
    seats?: number
    space: number
  }
  private_gists?: number | null
  public_gists: number
  public_members_url: string
  public_repos: number
  repos_url: string
  secret_scanning_enabled_for_new_repositories?: boolean
  secret_scanning_push_protection_custom_link?: string | null
  secret_scanning_push_protection_custom_link_enabled?: boolean
  secret_scanning_push_protection_enabled_for_new_repositories?: boolean
  total_private_repos?: number
  twitter_username?: string | null
  two_factor_requirement_enabled?: boolean | null
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean
}

export type t_organization_invitation = {
  created_at: string
  email: string | null
  failed_at?: string | null
  failed_reason?: string | null
  id: number
  invitation_source?: string
  invitation_teams_url: string
  inviter: t_simple_user
  login: string | null
  node_id: string
  role: string
  team_count: number
}

export type t_organization_programmatic_access_grant = {
  access_granted_at: string
  id: number
  owner: t_simple_user
  permissions: {
    organization?: {
      [key: string]: string | undefined
    }
    other?: {
      [key: string]: string | undefined
    }
    repository?: {
      [key: string]: string | undefined
    }
  }
  repositories_url: string
  repository_selection: "none" | "all" | "subset" | UnknownEnumStringValue
  token_expired: boolean
  token_expires_at: string | null
  token_id: number
  token_last_used_at: string | null
  token_name: string
}

export type t_organization_programmatic_access_grant_request = {
  created_at: string
  id: number
  owner: t_simple_user
  permissions: {
    organization?: {
      [key: string]: string | undefined
    }
    other?: {
      [key: string]: string | undefined
    }
    repository?: {
      [key: string]: string | undefined
    }
  }
  reason: string | null
  repositories_url: string
  repository_selection: "none" | "all" | "subset" | UnknownEnumStringValue
  token_expired: boolean
  token_expires_at: string | null
  token_id: number
  token_last_used_at: string | null
  token_name: string
}

export type t_organization_role = {
  base_role?:
    | "read"
    | "triage"
    | "write"
    | "maintain"
    | "admin"
    | UnknownEnumStringValue
    | null
  created_at: string
  description?: string | null
  id: number
  name: string
  organization: t_nullable_simple_user
  permissions: string[]
  source?:
    | "Organization"
    | "Enterprise"
    | "Predefined"
    | UnknownEnumStringValue
    | null
  updated_at: string
}

export type t_organization_secret_scanning_alert = {
  created_at?: t_alert_created_at
  html_url?: t_alert_html_url
  is_base64_encoded?: boolean | null
  locations_url?: string
  multi_repo?: boolean | null
  number?: t_alert_number
  publicly_leaked?: boolean | null
  push_protection_bypass_request_comment?: string | null
  push_protection_bypass_request_html_url?: string | null
  push_protection_bypass_request_reviewer?: t_nullable_simple_user
  push_protection_bypass_request_reviewer_comment?: string | null
  push_protection_bypassed?: boolean | null
  push_protection_bypassed_at?: string | null
  push_protection_bypassed_by?: t_nullable_simple_user
  repository?: t_simple_repository
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: string | null
  resolved_at?: string | null
  resolved_by?: t_nullable_simple_user
  secret?: string
  secret_type?: string
  secret_type_display_name?: string
  state?: t_secret_scanning_alert_state
  updated_at?: t_nullable_alert_updated_at
  url?: t_alert_url
  validity?: "active" | "inactive" | "unknown" | UnknownEnumStringValue
}

export type t_organization_simple = {
  avatar_url: string
  description: string | null
  events_url: string
  hooks_url: string
  id: number
  issues_url: string
  login: string
  members_url: string
  node_id: string
  public_members_url: string
  repos_url: string
  url: string
}

export type t_organization_update_issue_type = {
  color?:
    | "gray"
    | "blue"
    | "green"
    | "yellow"
    | "orange"
    | "red"
    | "pink"
    | "purple"
    | UnknownEnumStringValue
    | null
  description?: string | null
  is_enabled: boolean
  name: string
}

export type t_package = {
  created_at: string
  html_url: string
  id: number
  name: string
  owner?: t_nullable_simple_user
  package_type:
    | "npm"
    | "maven"
    | "rubygems"
    | "docker"
    | "nuget"
    | "container"
    | UnknownEnumStringValue
  repository?: t_nullable_minimal_repository
  updated_at: string
  url: string
  version_count: number
  visibility: "private" | "public" | UnknownEnumStringValue
}

export type t_package_version = {
  created_at: string
  deleted_at?: string
  description?: string
  html_url?: string
  id: number
  license?: string
  metadata?: {
    container?: {
      tags: string[]
    }
    docker?: {
      tag?: string[]
    }
    package_type:
      | "npm"
      | "maven"
      | "rubygems"
      | "docker"
      | "nuget"
      | "container"
      | UnknownEnumStringValue
  }
  name: string
  package_html_url: string
  updated_at: string
  url: string
}

export type t_packages_billing_usage = {
  included_gigabytes_bandwidth: number
  total_gigabytes_bandwidth_used: number
  total_paid_gigabytes_bandwidth_used: number
}

export type t_page = {
  build_type?: "legacy" | "workflow" | UnknownEnumStringValue | null
  cname: string | null
  custom_404: boolean
  html_url?: string
  https_certificate?: t_pages_https_certificate
  https_enforced?: boolean
  pending_domain_unverified_at?: string | null
  protected_domain_state?:
    | "pending"
    | "verified"
    | "unverified"
    | UnknownEnumStringValue
    | null
  public: boolean
  source?: t_pages_source_hash
  status: "built" | "building" | "errored" | UnknownEnumStringValue | null
  url: string
}

export type t_page_build = {
  commit: string
  created_at: string
  duration: number
  error: {
    message: string | null
  }
  pusher: t_nullable_simple_user
  status: string
  updated_at: string
  url: string
}

export type t_page_build_status = {
  status: string
  url: string
}

export type t_page_deployment = {
  id: number | string
  page_url: string
  preview_url?: string
  status_url: string
}

export type t_pages_deployment_status = {
  status?:
    | "deployment_in_progress"
    | "syncing_files"
    | "finished_file_sync"
    | "updating_pages"
    | "purging_cdn"
    | "deployment_cancelled"
    | "deployment_failed"
    | "deployment_content_failed"
    | "deployment_attempt_error"
    | "deployment_lost"
    | "succeed"
    | UnknownEnumStringValue
}

export type t_pages_health_check = {
  alt_domain?: {
    caa_error?: string | null
    dns_resolves?: boolean
    enforces_https?: boolean
    has_cname_record?: boolean | null
    has_mx_records_present?: boolean | null
    host?: string
    https_error?: string | null
    is_a_record?: boolean | null
    is_apex_domain?: boolean
    is_cloudflare_ip?: boolean | null
    is_cname_to_fastly?: boolean | null
    is_cname_to_github_user_domain?: boolean | null
    is_cname_to_pages_dot_github_dot_com?: boolean | null
    is_fastly_ip?: boolean | null
    is_https_eligible?: boolean | null
    is_non_github_pages_ip_present?: boolean | null
    is_old_ip_address?: boolean | null
    is_pages_domain?: boolean
    is_pointed_to_github_pages_ip?: boolean | null
    is_proxied?: boolean | null
    is_served_by_pages?: boolean | null
    is_valid?: boolean
    is_valid_domain?: boolean
    nameservers?: string
    reason?: string | null
    responds_to_https?: boolean
    should_be_a_record?: boolean | null
    uri?: string
  } | null
  domain?: {
    caa_error?: string | null
    dns_resolves?: boolean
    enforces_https?: boolean
    has_cname_record?: boolean | null
    has_mx_records_present?: boolean | null
    host?: string
    https_error?: string | null
    is_a_record?: boolean | null
    is_apex_domain?: boolean
    is_cloudflare_ip?: boolean | null
    is_cname_to_fastly?: boolean | null
    is_cname_to_github_user_domain?: boolean | null
    is_cname_to_pages_dot_github_dot_com?: boolean | null
    is_fastly_ip?: boolean | null
    is_https_eligible?: boolean | null
    is_non_github_pages_ip_present?: boolean | null
    is_old_ip_address?: boolean | null
    is_pages_domain?: boolean
    is_pointed_to_github_pages_ip?: boolean | null
    is_proxied?: boolean | null
    is_served_by_pages?: boolean | null
    is_valid?: boolean
    is_valid_domain?: boolean
    nameservers?: string
    reason?: string | null
    responds_to_https?: boolean
    should_be_a_record?: boolean | null
    uri?: string
  }
}

export type t_pages_https_certificate = {
  description: string
  domains: string[]
  expires_at?: string
  state:
    | "new"
    | "authorization_created"
    | "authorization_pending"
    | "authorized"
    | "authorization_revoked"
    | "issued"
    | "uploaded"
    | "approved"
    | "errored"
    | "bad_authz"
    | "destroy_pending"
    | "dns_changed"
    | UnknownEnumStringValue
}

export type t_pages_source_hash = {
  branch: string
  path: string
}

export type t_participation_stats = {
  all: number[]
  owner: number[]
}

export type t_pending_deployment = {
  current_user_can_approve: boolean
  environment: {
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    url?: string
  }
  reviewers: {
    reviewer?: t_simple_user | t_team
    type?: t_deployment_reviewer_type
  }[]
  wait_timer: number
  wait_timer_started_at: string | null
}

export type t_porter_author = {
  email: string
  id: number
  import_url: string
  name: string
  remote_id: string
  remote_name: string
  url: string
}

export type t_porter_large_file = {
  oid: string
  path: string
  ref_name: string
  size: number
}

export type t_prevent_self_review = boolean

export type t_private_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  business_plus?: boolean
  collaborators: number
  company: string | null
  created_at: string
  disk_usage: number
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  ldap_dn?: string
  location: string | null
  login: string
  name: string | null
  node_id: string
  notification_email?: string | null
  organizations_url: string
  owned_private_repos: number
  plan?: {
    collaborators: number
    name: string
    private_repos: number
    space: number
  }
  private_gists: number
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  total_private_repos: number
  twitter_username?: string | null
  two_factor_authentication: boolean
  type: string
  updated_at: string
  url: string
  user_view_type?: string
}

export type t_private_vulnerability_report_create = {
  cvss_vector_string?: string | null
  cwe_ids?: string[] | null
  description: string
  severity?:
    | "critical"
    | "high"
    | "medium"
    | "low"
    | UnknownEnumStringValue
    | null
  start_private_fork?: boolean
  summary: string
  vulnerabilities?:
    | {
        package: {
          ecosystem: t_security_advisory_ecosystems
          name?: string | null
        }
        patched_versions?: string | null
        vulnerable_functions?: string[] | null
        vulnerable_version_range?: string | null
      }[]
    | null
}

export type t_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_nullable_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?:
    | "read"
    | "write"
    | "admin"
    | "none"
    | UnknownEnumStringValue
  owner_url: string
  private?: boolean
  state: string
  updated_at: string
  url: string
}

export type t_project_card = {
  archived?: boolean
  column_name?: string
  column_url: string
  content_url?: string
  created_at: string
  creator: t_nullable_simple_user
  id: number
  node_id: string
  note: string | null
  project_id?: string
  project_url: string
  updated_at: string
  url: string
}

export type t_project_collaborator_permission = {
  permission: string
  user: t_nullable_simple_user
}

export type t_project_column = {
  cards_url: string
  created_at: string
  id: number
  name: string
  node_id: string
  project_url: string
  updated_at: string
  url: string
}

export type t_protected_branch = {
  allow_deletions?: {
    enabled: boolean
  }
  allow_force_pushes?: {
    enabled: boolean
  }
  allow_fork_syncing?: {
    enabled?: boolean
  }
  block_creations?: {
    enabled: boolean
  }
  enforce_admins?: {
    enabled: boolean
    url: string
  }
  lock_branch?: {
    enabled?: boolean
  }
  required_conversation_resolution?: {
    enabled?: boolean
  }
  required_linear_history?: {
    enabled: boolean
  }
  required_pull_request_reviews?: {
    bypass_pull_request_allowances?: {
      apps?: t_integration[]
      teams: t_team[]
      users: t_simple_user[]
    }
    dismiss_stale_reviews?: boolean
    dismissal_restrictions?: {
      apps?: t_integration[]
      teams: t_team[]
      teams_url: string
      url: string
      users: t_simple_user[]
      users_url: string
    }
    require_code_owner_reviews?: boolean
    require_last_push_approval?: boolean
    required_approving_review_count?: number
    url: string
  }
  required_signatures?: {
    enabled: boolean
    url: string
  }
  required_status_checks?: t_status_check_policy
  restrictions?: t_branch_restriction_policy
  url: string
}

export type t_protected_branch_admin_enforced = {
  enabled: boolean
  url: string
}

export type t_protected_branch_pull_request_review = {
  bypass_pull_request_allowances?: {
    apps?: t_integration[]
    teams?: t_team[]
    users?: t_simple_user[]
  }
  dismiss_stale_reviews: boolean
  dismissal_restrictions?: {
    apps?: t_integration[]
    teams?: t_team[]
    teams_url?: string
    url?: string
    users?: t_simple_user[]
    users_url?: string
  }
  require_code_owner_reviews: boolean
  require_last_push_approval?: boolean
  required_approving_review_count?: number
  url?: string
}

export type t_protected_branch_required_status_check = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url?: string
  enforcement_level?: string
  strict?: boolean
  url?: string
}

export type t_public_ip = {
  enabled?: boolean
  length?: number
  prefix?: string
}

export type t_public_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  collaborators?: number
  company: string | null
  created_at: string
  disk_usage?: number
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  location: string | null
  login: string
  name: string | null
  node_id: string
  notification_email?: string | null
  organizations_url: string
  owned_private_repos?: number
  plan?: {
    collaborators: number
    name: string
    private_repos: number
    space: number
  }
  private_gists?: number
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  total_private_repos?: number
  twitter_username?: string | null
  type: string
  updated_at: string
  url: string
  user_view_type?: string
}

export type t_pull_request = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: string | null
  additions: number
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_simple_user
  }
  body: string | null
  changed_files: number
  closed_at: string | null
  comments: number
  comments_url: string
  commits: number
  commits_url: string
  created_at: string
  deletions: number
  diff_url: string
  draft?: boolean
  head: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_simple_user
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string | null
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  maintainer_can_modify: boolean
  merge_commit_sha: string | null
  mergeable: boolean | null
  mergeable_state: string
  merged: boolean
  merged_at: string | null
  merged_by: t_nullable_simple_user
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  rebaseable?: boolean | null
  requested_reviewers?: t_simple_user[] | null
  requested_teams?: t_team_simple[] | null
  review_comment_url: string
  review_comments: number
  review_comments_url: string
  state: "open" | "closed" | UnknownEnumStringValue
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_pull_request_merge_result = {
  merged: boolean
  message: string
  sha: string
}

export type t_pull_request_minimal = {
  base: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  head: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  id: number
  number: number
  url: string
}

export type t_pull_request_review = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string | null
  html_url: string
  id: number
  node_id: string
  pull_request_url: string
  state: string
  submitted_at?: string
  user: t_nullable_simple_user
}

export type t_pull_request_review_comment = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
    self: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number
  line?: number
  node_id: string
  original_commit_id: string
  original_line?: number
  original_position?: number
  original_start_line?: number | null
  path: string
  position?: number
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup
  side?: "LEFT" | "RIGHT" | UnknownEnumStringValue
  start_line?: number | null
  start_side?: "LEFT" | "RIGHT" | UnknownEnumStringValue | null
  subject_type?: "line" | "file" | UnknownEnumStringValue
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_pull_request_review_request = {
  teams: t_team[]
  users: t_simple_user[]
}

export type t_pull_request_simple = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  body: string | null
  closed_at: string | null
  comments_url: string
  commits_url: string
  created_at: string
  diff_url: string
  draft?: boolean
  head: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  merge_commit_sha: string | null
  merged_at: string | null
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  requested_reviewers?: t_simple_user[] | null
  requested_teams?: t_team[] | null
  review_comment_url: string
  review_comments_url: string
  state: string
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_rate_limit = {
  limit: number
  remaining: number
  reset: number
  used: number
}

export type t_rate_limit_overview = {
  rate: t_rate_limit
  resources: {
    actions_runner_registration?: t_rate_limit
    code_scanning_autofix?: t_rate_limit
    code_scanning_upload?: t_rate_limit
    code_search?: t_rate_limit
    core: t_rate_limit
    dependency_snapshots?: t_rate_limit
    graphql?: t_rate_limit
    integration_manifest?: t_rate_limit
    scim?: t_rate_limit
    search: t_rate_limit
    source_import?: t_rate_limit
  }
}

export type t_reaction = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
  created_at: string
  id: number
  node_id: string
  user: t_nullable_simple_user
}

export type t_reaction_rollup = {
  "+1": number
  "-1": number
  confused: number
  eyes: number
  heart: number
  hooray: number
  laugh: number
  rocket: number
  total_count: number
  url: string
}

export type t_referenced_workflow = {
  path: string
  ref?: string
  sha: string
}

export type t_referrer_traffic = {
  count: number
  referrer: string
  uniques: number
}

export type t_release = {
  assets: t_release_asset[]
  assets_url: string
  author: t_simple_user
  body?: string | null
  body_html?: string
  body_text?: string
  created_at: string
  discussion_url?: string
  draft: boolean
  html_url: string
  id: number
  mentions_count?: number
  name: string | null
  node_id: string
  prerelease: boolean
  published_at: string | null
  reactions?: t_reaction_rollup
  tag_name: string
  tarball_url: string | null
  target_commitish: string
  upload_url: string
  url: string
  zipball_url: string | null
}

export type t_release_asset = {
  browser_download_url: string
  content_type: string
  created_at: string
  download_count: number
  id: number
  label: string | null
  name: string
  node_id: string
  size: number
  state: "uploaded" | "open" | UnknownEnumStringValue
  updated_at: string
  uploader: t_nullable_simple_user
  url: string
}

export type t_release_notes_content = {
  body: string
  name: string
}

export type t_removed_from_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?: {
    column_name: string
    id: number
    previous_column_name?: string
    project_id: number
    project_url: string
    url: string
  }
  url: string
}

export type t_renamed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  rename: {
    from: string
    to: string
  }
  url: string
}

export type t_repo_codespaces_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_repo_search_result_item = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  score: number
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  text_matches?: t_search_result_text_matches
  topics?: string[]
  trees_url: string
  updated_at: string
  url: string
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_repository_advisory = {
  readonly author: t_simple_user | null
  readonly closed_at: string | null
  collaborating_teams: t_team[] | null
  collaborating_users: t_simple_user[] | null
  readonly created_at: string | null
  credits:
    | {
        login?: string
        type?: t_security_advisory_credit_types
      }[]
    | null
  readonly credits_detailed: t_repository_advisory_credit[] | null
  cve_id: string | null
  cvss: {
    readonly score: number | null
    vector_string: string | null
  } | null
  cvss_severities?: t_cvss_severities
  cwe_ids: string[] | null
  readonly cwes:
    | {
        cwe_id: string
        readonly name: string
      }[]
    | null
  description: string | null
  readonly ghsa_id: string
  readonly html_url: string
  readonly identifiers: {
    type: "CVE" | "GHSA" | UnknownEnumStringValue
    value: string
  }[]
  readonly private_fork: t_simple_repository | null
  readonly published_at: string | null
  readonly publisher: t_simple_user | null
  severity:
    | "critical"
    | "high"
    | "medium"
    | "low"
    | UnknownEnumStringValue
    | null
  state:
    | "published"
    | "closed"
    | "withdrawn"
    | "draft"
    | "triage"
    | UnknownEnumStringValue
  readonly submission: {
    readonly accepted: boolean
  } | null
  summary: string
  readonly updated_at: string | null
  readonly url: string
  vulnerabilities: t_repository_advisory_vulnerability[] | null
  readonly withdrawn_at: string | null
}

export type t_repository_advisory_create = {
  credits?:
    | {
        login: string
        type: t_security_advisory_credit_types
      }[]
    | null
  cve_id?: string | null
  cvss_vector_string?: string | null
  cwe_ids?: string[] | null
  description: string
  severity?:
    | "critical"
    | "high"
    | "medium"
    | "low"
    | UnknownEnumStringValue
    | null
  start_private_fork?: boolean
  summary: string
  vulnerabilities: {
    package: {
      ecosystem: t_security_advisory_ecosystems
      name?: string | null
    }
    patched_versions?: string | null
    vulnerable_functions?: string[] | null
    vulnerable_version_range?: string | null
  }[]
}

export type t_repository_advisory_credit = {
  state: "accepted" | "declined" | "pending" | UnknownEnumStringValue
  type: t_security_advisory_credit_types
  user: t_simple_user
}

export type t_repository_advisory_update = {
  collaborating_teams?: string[] | null
  collaborating_users?: string[] | null
  credits?:
    | {
        login: string
        type: t_security_advisory_credit_types
      }[]
    | null
  cve_id?: string | null
  cvss_vector_string?: string | null
  cwe_ids?: string[] | null
  description?: string
  severity?:
    | "critical"
    | "high"
    | "medium"
    | "low"
    | UnknownEnumStringValue
    | null
  state?: "published" | "closed" | "draft" | UnknownEnumStringValue
  summary?: string
  vulnerabilities?: {
    package: {
      ecosystem: t_security_advisory_ecosystems
      name?: string | null
    }
    patched_versions?: string | null
    vulnerable_functions?: string[] | null
    vulnerable_version_range?: string | null
  }[]
}

export type t_repository_advisory_vulnerability = {
  package: {
    ecosystem: t_security_advisory_ecosystems
    name: string | null
  } | null
  patched_versions: string | null
  vulnerable_functions: string[] | null
  vulnerable_version_range: string | null
}

export type t_repository_collaborator_permission = {
  permission: string
  role_name: string
  user: t_nullable_collaborator
}

export type t_repository_invitation = {
  created_at: string
  expired?: boolean
  html_url: string
  id: number
  invitee: t_nullable_simple_user
  inviter: t_nullable_simple_user
  node_id: string
  permissions:
    | "read"
    | "write"
    | "admin"
    | "triage"
    | "maintain"
    | UnknownEnumStringValue
  repository: t_minimal_repository
  url: string
}

export type t_repository_rule =
  | t_repository_rule_creation
  | t_repository_rule_update
  | t_repository_rule_deletion
  | t_repository_rule_required_linear_history
  | t_repository_rule_merge_queue
  | t_repository_rule_required_deployments
  | t_repository_rule_required_signatures
  | t_repository_rule_pull_request
  | t_repository_rule_required_status_checks
  | t_repository_rule_non_fast_forward
  | t_repository_rule_commit_message_pattern
  | t_repository_rule_commit_author_email_pattern
  | t_repository_rule_committer_email_pattern
  | t_repository_rule_branch_name_pattern
  | t_repository_rule_tag_name_pattern
  | t_repository_rule_file_path_restriction
  | t_repository_rule_max_file_path_length
  | t_repository_rule_file_extension_restriction
  | t_repository_rule_max_file_size
  | t_repository_rule_workflows
  | t_repository_rule_code_scanning

export type t_repository_rule_branch_name_pattern = {
  parameters?: {
    name?: string
    negate?: boolean
    operator:
      | "starts_with"
      | "ends_with"
      | "contains"
      | "regex"
      | UnknownEnumStringValue
    pattern: string
  }
  type: "branch_name_pattern" | UnknownEnumStringValue
}

export type t_repository_rule_code_scanning = {
  parameters?: {
    code_scanning_tools: t_repository_rule_params_code_scanning_tool[]
  }
  type: "code_scanning" | UnknownEnumStringValue
}

export type t_repository_rule_commit_author_email_pattern = {
  parameters?: {
    name?: string
    negate?: boolean
    operator:
      | "starts_with"
      | "ends_with"
      | "contains"
      | "regex"
      | UnknownEnumStringValue
    pattern: string
  }
  type: "commit_author_email_pattern" | UnknownEnumStringValue
}

export type t_repository_rule_commit_message_pattern = {
  parameters?: {
    name?: string
    negate?: boolean
    operator:
      | "starts_with"
      | "ends_with"
      | "contains"
      | "regex"
      | UnknownEnumStringValue
    pattern: string
  }
  type: "commit_message_pattern" | UnknownEnumStringValue
}

export type t_repository_rule_committer_email_pattern = {
  parameters?: {
    name?: string
    negate?: boolean
    operator:
      | "starts_with"
      | "ends_with"
      | "contains"
      | "regex"
      | UnknownEnumStringValue
    pattern: string
  }
  type: "committer_email_pattern" | UnknownEnumStringValue
}

export type t_repository_rule_creation = {
  type: "creation" | UnknownEnumStringValue
}

export type t_repository_rule_deletion = {
  type: "deletion" | UnknownEnumStringValue
}

export type t_repository_rule_detailed =
  | (t_repository_rule_creation & t_repository_rule_ruleset_info)
  | (t_repository_rule_update & t_repository_rule_ruleset_info)
  | (t_repository_rule_deletion & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_linear_history & t_repository_rule_ruleset_info)
  | (t_repository_rule_merge_queue & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_deployments & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_signatures & t_repository_rule_ruleset_info)
  | (t_repository_rule_pull_request & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_status_checks & t_repository_rule_ruleset_info)
  | (t_repository_rule_non_fast_forward & t_repository_rule_ruleset_info)
  | (t_repository_rule_commit_message_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_commit_author_email_pattern &
      t_repository_rule_ruleset_info)
  | (t_repository_rule_committer_email_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_branch_name_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_tag_name_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_file_path_restriction & t_repository_rule_ruleset_info)
  | (t_repository_rule_max_file_path_length & t_repository_rule_ruleset_info)
  | (t_repository_rule_file_extension_restriction &
      t_repository_rule_ruleset_info)
  | (t_repository_rule_max_file_size & t_repository_rule_ruleset_info)
  | (t_repository_rule_workflows & t_repository_rule_ruleset_info)
  | (t_repository_rule_code_scanning & t_repository_rule_ruleset_info)

export type t_repository_rule_enforcement =
  | "disabled"
  | "active"
  | "evaluate"
  | UnknownEnumStringValue

export type t_repository_rule_file_extension_restriction = {
  parameters?: {
    restricted_file_extensions: string[]
  }
  type: "file_extension_restriction" | UnknownEnumStringValue
}

export type t_repository_rule_file_path_restriction = {
  parameters?: {
    restricted_file_paths: string[]
  }
  type: "file_path_restriction" | UnknownEnumStringValue
}

export type t_repository_rule_max_file_path_length = {
  parameters?: {
    max_file_path_length: number
  }
  type: "max_file_path_length" | UnknownEnumStringValue
}

export type t_repository_rule_max_file_size = {
  parameters?: {
    max_file_size: number
  }
  type: "max_file_size" | UnknownEnumStringValue
}

export type t_repository_rule_merge_queue = {
  parameters?: {
    check_response_timeout_minutes: number
    grouping_strategy: "ALLGREEN" | "HEADGREEN" | UnknownEnumStringValue
    max_entries_to_build: number
    max_entries_to_merge: number
    merge_method: "MERGE" | "SQUASH" | "REBASE" | UnknownEnumStringValue
    min_entries_to_merge: number
    min_entries_to_merge_wait_minutes: number
  }
  type: "merge_queue" | UnknownEnumStringValue
}

export type t_repository_rule_non_fast_forward = {
  type: "non_fast_forward" | UnknownEnumStringValue
}

export type t_repository_rule_params_code_scanning_tool = {
  alerts_threshold:
    | "none"
    | "errors"
    | "errors_and_warnings"
    | "all"
    | UnknownEnumStringValue
  security_alerts_threshold:
    | "none"
    | "critical"
    | "high_or_higher"
    | "medium_or_higher"
    | "all"
    | UnknownEnumStringValue
  tool: string
}

export type t_repository_rule_params_status_check_configuration = {
  context: string
  integration_id?: number
}

export type t_repository_rule_params_workflow_file_reference = {
  path: string
  ref?: string
  repository_id: number
  sha?: string
}

export type t_repository_rule_pull_request = {
  parameters?: {
    allowed_merge_methods?: (
      | "merge"
      | "squash"
      | "rebase"
      | UnknownEnumStringValue
    )[]
    automatic_copilot_code_review_enabled?: boolean
    dismiss_stale_reviews_on_push: boolean
    require_code_owner_review: boolean
    require_last_push_approval: boolean
    required_approving_review_count: number
    required_review_thread_resolution: boolean
  }
  type: "pull_request" | UnknownEnumStringValue
}

export type t_repository_rule_required_deployments = {
  parameters?: {
    required_deployment_environments: string[]
  }
  type: "required_deployments" | UnknownEnumStringValue
}

export type t_repository_rule_required_linear_history = {
  type: "required_linear_history" | UnknownEnumStringValue
}

export type t_repository_rule_required_signatures = {
  type: "required_signatures" | UnknownEnumStringValue
}

export type t_repository_rule_required_status_checks = {
  parameters?: {
    do_not_enforce_on_create?: boolean
    required_status_checks: t_repository_rule_params_status_check_configuration[]
    strict_required_status_checks_policy: boolean
  }
  type: "required_status_checks" | UnknownEnumStringValue
}

export type t_repository_rule_ruleset_info = {
  ruleset_id?: number
  ruleset_source?: string
  ruleset_source_type?: "Repository" | "Organization" | UnknownEnumStringValue
}

export type t_repository_rule_tag_name_pattern = {
  parameters?: {
    name?: string
    negate?: boolean
    operator:
      | "starts_with"
      | "ends_with"
      | "contains"
      | "regex"
      | UnknownEnumStringValue
    pattern: string
  }
  type: "tag_name_pattern" | UnknownEnumStringValue
}

export type t_repository_rule_update = {
  parameters?: {
    update_allows_fetch_and_merge: boolean
  }
  type: "update" | UnknownEnumStringValue
}

export type t_repository_rule_violation_error = {
  documentation_url?: string
  message?: string
  metadata?: {
    secret_scanning?: {
      bypass_placeholders?: {
        placeholder_id?: t_secret_scanning_push_protection_bypass_placeholder_id
        token_type?: string
      }[]
    }
  }
  status?: string
}

export type t_repository_rule_workflows = {
  parameters?: {
    do_not_enforce_on_create?: boolean
    workflows: t_repository_rule_params_workflow_file_reference[]
  }
  type: "workflows" | UnknownEnumStringValue
}

export type t_repository_ruleset = {
  _links?: {
    html?: {
      href?: string
    } | null
    self?: {
      href?: string
    }
  }
  bypass_actors?: t_repository_ruleset_bypass_actor[]
  conditions?: t_repository_ruleset_conditions | t_org_ruleset_conditions | null
  created_at?: string
  current_user_can_bypass?:
    | "always"
    | "pull_requests_only"
    | "never"
    | UnknownEnumStringValue
  enforcement: t_repository_rule_enforcement
  id: number
  name: string
  node_id?: string
  rules?: t_repository_rule[]
  source: string
  source_type?:
    | "Repository"
    | "Organization"
    | "Enterprise"
    | UnknownEnumStringValue
  target?: "branch" | "tag" | "push" | "repository" | UnknownEnumStringValue
  updated_at?: string
}

export type t_repository_ruleset_bypass_actor = {
  actor_id?: number | null
  actor_type:
    | "Integration"
    | "OrganizationAdmin"
    | "RepositoryRole"
    | "Team"
    | "DeployKey"
    | UnknownEnumStringValue
  bypass_mode?: "always" | "pull_request" | UnknownEnumStringValue
}

export type t_repository_ruleset_conditions = {
  ref_name?: {
    exclude?: string[]
    include?: string[]
  }
}

export type t_repository_ruleset_conditions_repository_id_target = {
  repository_id: {
    repository_ids?: number[]
  }
}

export type t_repository_ruleset_conditions_repository_name_target = {
  repository_name: {
    exclude?: string[]
    include?: string[]
    protected?: boolean
  }
}

export type t_repository_ruleset_conditions_repository_property_spec = {
  name: string
  property_values: string[]
  source?: "custom" | "system" | UnknownEnumStringValue
}

export type t_repository_ruleset_conditions_repository_property_target = {
  repository_property: {
    exclude?: t_repository_ruleset_conditions_repository_property_spec[]
    include?: t_repository_ruleset_conditions_repository_property_spec[]
  }
}

export type t_repository_subscription = {
  created_at: string
  ignored: boolean
  reason: string | null
  repository_url: string
  subscribed: boolean
  url: string
}

export type t_review_comment = {
  _links: {
    html: t_link
    pull_request: t_link
    self: t_link
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number
  line?: number
  node_id: string
  original_commit_id: string
  original_line?: number
  original_position: number
  original_start_line?: number | null
  path: string
  position: number | null
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup
  side?: "LEFT" | "RIGHT" | UnknownEnumStringValue
  start_line?: number | null
  start_side?: "LEFT" | "RIGHT" | UnknownEnumStringValue | null
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_review_custom_gates_comment_required = {
  comment: string
  environment_name: string
}

export type t_review_custom_gates_state_required = {
  comment?: string
  environment_name: string
  state: "approved" | "rejected" | UnknownEnumStringValue
}

export type t_review_dismissed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  dismissed_review: {
    dismissal_commit_id?: string
    dismissal_message: string | null
    review_id: number
    state: string
  }
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_review_request_removed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  requested_reviewer?: t_simple_user
  requested_team?: t_team
  review_requester: t_simple_user
  url: string
}

export type t_review_requested_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  requested_reviewer?: t_simple_user
  requested_team?: t_team
  review_requester: t_simple_user
  url: string
}

export type t_root = {
  authorizations_url: string
  code_search_url: string
  commit_search_url: string
  current_user_authorizations_html_url: string
  current_user_repositories_url: string
  current_user_url: string
  emails_url: string
  emojis_url: string
  events_url: string
  feeds_url: string
  followers_url: string
  following_url: string
  gists_url: string
  hub_url?: string
  issue_search_url: string
  issues_url: string
  keys_url: string
  label_search_url: string
  notifications_url: string
  organization_repositories_url: string
  organization_teams_url: string
  organization_url: string
  public_gists_url: string
  rate_limit_url: string
  repository_search_url: string
  repository_url: string
  starred_gists_url: string
  starred_url: string
  topic_search_url?: string
  user_organizations_url: string
  user_repositories_url: string
  user_search_url: string
  user_url: string
}

export type t_rule_suite = {
  actor_id?: number | null
  actor_name?: string | null
  after_sha?: string
  before_sha?: string
  evaluation_result?: "pass" | "fail" | "bypass" | UnknownEnumStringValue | null
  id?: number
  pushed_at?: string
  ref?: string
  repository_id?: number
  repository_name?: string
  result?: "pass" | "fail" | "bypass" | UnknownEnumStringValue
  rule_evaluations?: {
    details?: string | null
    enforcement?:
      | "active"
      | "evaluate"
      | "deleted ruleset"
      | UnknownEnumStringValue
    result?: "pass" | "fail" | UnknownEnumStringValue
    rule_source?: {
      id?: number | null
      name?: string | null
      type?: string
    }
    rule_type?: string
  }[]
}

export type t_rule_suites = {
  actor_id?: number
  actor_name?: string
  after_sha?: string
  before_sha?: string
  evaluation_result?: "pass" | "fail" | "bypass" | UnknownEnumStringValue
  id?: number
  pushed_at?: string
  ref?: string
  repository_id?: number
  repository_name?: string
  result?: "pass" | "fail" | "bypass" | UnknownEnumStringValue
}[]

export type t_ruleset_version = {
  actor: {
    id?: number
    type?: string
  }
  updated_at: string
  version_id: number
}

export type t_ruleset_version_with_state = t_ruleset_version & {
  state: EmptyObject
}

export type t_runner = {
  busy: boolean
  ephemeral?: boolean
  id: number
  labels: t_runner_label[]
  name: string
  os: string
  runner_group_id?: number
  status: string
}

export type t_runner_application = {
  architecture: string
  download_url: string
  filename: string
  os: string
  sha256_checksum?: string
  temp_download_token?: string
}

export type t_runner_groups_org = {
  allows_public_repositories: boolean
  default: boolean
  hosted_runners_url?: string
  id: number
  inherited: boolean
  inherited_allows_public_repositories?: boolean
  name: string
  network_configuration_id?: string
  restricted_to_workflows?: boolean
  runners_url: string
  selected_repositories_url?: string
  selected_workflows?: string[]
  visibility: string
  workflow_restrictions_read_only?: boolean
}

export type t_runner_label = {
  id?: number
  name: string
  type?: "read-only" | "custom" | UnknownEnumStringValue
}

export type t_scim_error = {
  detail?: string | null
  documentation_url?: string | null
  message?: string | null
  schemas?: string[]
  scimType?: string | null
  status?: number
}

export type t_search_result_text_matches = {
  fragment?: string
  matches?: {
    indices?: number[]
    text?: string
  }[]
  object_type?: string | null
  object_url?: string
  property?: string
}[]

export type t_secret_scanning_alert = {
  created_at?: t_alert_created_at
  html_url?: t_alert_html_url
  is_base64_encoded?: boolean | null
  locations_url?: string
  multi_repo?: boolean | null
  number?: t_alert_number
  publicly_leaked?: boolean | null
  push_protection_bypass_request_comment?: string | null
  push_protection_bypass_request_html_url?: string | null
  push_protection_bypass_request_reviewer?: t_nullable_simple_user
  push_protection_bypass_request_reviewer_comment?: string | null
  push_protection_bypassed?: boolean | null
  push_protection_bypassed_at?: string | null
  push_protection_bypassed_by?: t_nullable_simple_user
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: string | null
  resolved_at?: string | null
  resolved_by?: t_nullable_simple_user
  secret?: string
  secret_type?: string
  secret_type_display_name?: string
  state?: t_secret_scanning_alert_state
  updated_at?: t_nullable_alert_updated_at
  url?: t_alert_url
  validity?: "active" | "inactive" | "unknown" | UnknownEnumStringValue
}

export type t_secret_scanning_alert_resolution =
  | "false_positive"
  | "wont_fix"
  | "revoked"
  | "used_in_tests"
  | UnknownEnumStringValue
  | null

export type t_secret_scanning_alert_resolution_comment = string | null

export type t_secret_scanning_alert_state =
  | "open"
  | "resolved"
  | UnknownEnumStringValue

export type t_secret_scanning_location = {
  details?:
    | t_secret_scanning_location_commit
    | t_secret_scanning_location_wiki_commit
    | t_secret_scanning_location_issue_title
    | t_secret_scanning_location_issue_body
    | t_secret_scanning_location_issue_comment
    | t_secret_scanning_location_discussion_title
    | t_secret_scanning_location_discussion_body
    | t_secret_scanning_location_discussion_comment
    | t_secret_scanning_location_pull_request_title
    | t_secret_scanning_location_pull_request_body
    | t_secret_scanning_location_pull_request_comment
    | t_secret_scanning_location_pull_request_review
    | t_secret_scanning_location_pull_request_review_comment
  type?:
    | "commit"
    | "wiki_commit"
    | "issue_title"
    | "issue_body"
    | "issue_comment"
    | "discussion_title"
    | "discussion_body"
    | "discussion_comment"
    | "pull_request_title"
    | "pull_request_body"
    | "pull_request_comment"
    | "pull_request_review"
    | "pull_request_review_comment"
    | UnknownEnumStringValue
}

export type t_secret_scanning_location_commit = {
  blob_sha: string
  blob_url: string
  commit_sha: string
  commit_url: string
  end_column: number
  end_line: number
  path: string
  start_column: number
  start_line: number
}

export type t_secret_scanning_location_discussion_body = {
  discussion_body_url: string
}

export type t_secret_scanning_location_discussion_comment = {
  discussion_comment_url: string
}

export type t_secret_scanning_location_discussion_title = {
  discussion_title_url: string
}

export type t_secret_scanning_location_issue_body = {
  issue_body_url: string
}

export type t_secret_scanning_location_issue_comment = {
  issue_comment_url: string
}

export type t_secret_scanning_location_issue_title = {
  issue_title_url: string
}

export type t_secret_scanning_location_pull_request_body = {
  pull_request_body_url: string
}

export type t_secret_scanning_location_pull_request_comment = {
  pull_request_comment_url: string
}

export type t_secret_scanning_location_pull_request_review = {
  pull_request_review_url: string
}

export type t_secret_scanning_location_pull_request_review_comment = {
  pull_request_review_comment_url: string
}

export type t_secret_scanning_location_pull_request_title = {
  pull_request_title_url: string
}

export type t_secret_scanning_location_wiki_commit = {
  blob_sha: string
  commit_sha: string
  commit_url: string
  end_column: number
  end_line: number
  page_url: string
  path: string
  start_column: number
  start_line: number
}

export type t_secret_scanning_push_protection_bypass = {
  expire_at?: string | null
  reason?: t_secret_scanning_push_protection_bypass_reason
  token_type?: string
}

export type t_secret_scanning_push_protection_bypass_placeholder_id = string

export type t_secret_scanning_push_protection_bypass_reason =
  | "false_positive"
  | "used_in_tests"
  | "will_fix_later"
  | UnknownEnumStringValue

export type t_secret_scanning_scan = {
  completed_at?: string | null
  started_at?: string | null
  status?: string
  type?: string
}

export type t_secret_scanning_scan_history = {
  backfill_scans?: t_secret_scanning_scan[]
  custom_pattern_backfill_scans?: (t_secret_scanning_scan & {
    pattern_name?: string
    pattern_scope?: string
  })[]
  incremental_scans?: t_secret_scanning_scan[]
  pattern_update_scans?: t_secret_scanning_scan[]
}

export type t_security_advisory_credit_types =
  | "analyst"
  | "finder"
  | "reporter"
  | "coordinator"
  | "remediation_developer"
  | "remediation_reviewer"
  | "remediation_verifier"
  | "tool"
  | "sponsor"
  | "other"
  | UnknownEnumStringValue

export type t_security_advisory_ecosystems =
  | "rubygems"
  | "npm"
  | "pip"
  | "maven"
  | "nuget"
  | "composer"
  | "go"
  | "rust"
  | "erlang"
  | "actions"
  | "pub"
  | "other"
  | "swift"
  | UnknownEnumStringValue

export type t_security_advisory_epss = {
  percentage?: number
  percentile?: number
} | null

export type t_security_and_analysis = {
  advanced_security?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  code_security?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  dependabot_security_updates?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  secret_scanning?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  secret_scanning_ai_detection?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  secret_scanning_non_provider_patterns?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
  secret_scanning_push_protection?: {
    status?: "enabled" | "disabled" | UnknownEnumStringValue
  }
} | null

export type t_selected_actions = {
  github_owned_allowed?: boolean
  patterns_allowed?: string[]
  verified_allowed?: boolean
}

export type t_selected_actions_url = string

export type t_short_blob = {
  sha: string
  url: string
}

export type t_short_branch = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
  protection?: t_branch_protection
  protection_url?: string
}

export type t_simple_classroom = {
  archived: boolean
  id: number
  name: string
  url: string
}

export type t_simple_classroom_assignment = {
  accepted: number
  classroom: t_simple_classroom
  deadline: string | null
  editor: string
  feedback_pull_requests_enabled: boolean
  id: number
  invitations_enabled: boolean
  invite_link: string
  language: string
  max_members?: number | null
  max_teams?: number | null
  passing: number
  public_repo: boolean
  slug: string
  students_are_repo_admins: boolean
  submitted: number
  title: string
  type: "individual" | "group" | UnknownEnumStringValue
}

export type t_simple_classroom_organization = {
  avatar_url: string
  html_url: string
  id: number
  login: string
  name: string | null
  node_id: string
}

export type t_simple_classroom_repository = {
  default_branch: string
  full_name: string
  html_url: string
  id: number
  node_id: string
  private: boolean
}

export type t_simple_classroom_user = {
  avatar_url: string
  html_url: string
  id: number
  login: string
}

export type t_simple_commit = {
  author: {
    email: string
    name: string
  } | null
  committer: {
    email: string
    name: string
  } | null
  id: string
  message: string
  timestamp: string
  tree_id: string
}

export type t_simple_commit_status = {
  avatar_url: string | null
  context: string
  created_at: string
  description: string | null
  id: number
  node_id: string
  required?: boolean | null
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_simple_repository = {
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  description: string | null
  downloads_url: string
  events_url: string
  fork: boolean
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  html_url: string
  id: number
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  name: string
  node_id: string
  notifications_url: string
  owner: t_simple_user
  private: boolean
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  teams_url: string
  trees_url: string
  url: string
}

export type t_simple_user = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string
}

export type t_snapshot = {
  detector: {
    name: string
    url: string
    version: string
  }
  job: {
    correlator: string
    html_url?: string
    id: string
  }
  manifests?: {
    [key: string]: t_manifest | undefined
  }
  metadata?: t_metadata
  ref: string
  scanned: string
  sha: string
  version: number
}

export type t_social_account = {
  provider: string
  url: string
}

export type t_ssh_signing_key = {
  created_at: string
  id: number
  key: string
  title: string
}

export type t_stargazer = {
  starred_at: string
  user: t_nullable_simple_user
}

export type t_starred_repository = {
  repo: t_repository
  starred_at: string
}

export type t_state_change_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  state_reason?: string | null
  url: string
}

export type t_status = {
  avatar_url: string | null
  context: string
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  id: number
  node_id: string
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_status_check_policy = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url: string
  strict: boolean
  url: string
}

export type t_sub_issues_summary = {
  completed: number
  percent_completed: number
  total: number
}

export type t_tag = {
  commit: {
    sha: string
    url: string
  }
  name: string
  node_id: string
  tarball_url: string
  zipball_url: string
}

export type t_tag_protection = {
  created_at?: string
  enabled?: boolean
  id?: number
  pattern: string
  updated_at?: string
}

export type t_team = {
  description: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  node_id: string
  notification_setting?: string
  parent: t_nullable_team_simple
  permission: string
  permissions?: {
    admin: boolean
    maintain: boolean
    pull: boolean
    push: boolean
    triage: boolean
  }
  privacy?: string
  repositories_url: string
  slug: string
  url: string
}

export type t_team_discussion = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  comments_count: number
  comments_url: string
  created_at: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  pinned: boolean
  private: boolean
  reactions?: t_reaction_rollup
  team_url: string
  title: string
  updated_at: string
  url: string
}

export type t_team_discussion_comment = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  created_at: string
  discussion_url: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
}

export type t_team_full = {
  created_at: string
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_count: number
  members_url: string
  name: string
  node_id: string
  notification_setting?:
    | "notifications_enabled"
    | "notifications_disabled"
    | UnknownEnumStringValue
  organization: t_team_organization
  parent?: t_nullable_team_simple
  permission: string
  privacy?: "closed" | "secret" | UnknownEnumStringValue
  repos_count: number
  repositories_url: string
  slug: string
  updated_at: string
  url: string
}

export type t_team_membership = {
  role: "member" | "maintainer" | UnknownEnumStringValue
  state: "active" | "pending" | UnknownEnumStringValue
  url: string
}

export type t_team_organization = {
  archived_at: string | null
  avatar_url: string
  billing_email?: string | null
  blog?: string
  collaborators?: number | null
  company?: string
  created_at: string
  default_repository_permission?: string | null
  description: string | null
  disk_usage?: number | null
  email?: string
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean
  issues_url: string
  location?: string
  login: string
  members_allowed_repository_creation_type?: string
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean | null
  members_can_fork_private_repositories?: boolean | null
  members_url: string
  name?: string
  node_id: string
  owned_private_repos?: number
  plan?: {
    filled_seats?: number
    name: string
    private_repos: number
    seats?: number
    space: number
  }
  private_gists?: number | null
  public_gists: number
  public_members_url: string
  public_repos: number
  repos_url: string
  total_private_repos?: number
  twitter_username?: string | null
  two_factor_requirement_enabled?: boolean | null
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean
}

export type t_team_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?: string
  owner_url: string
  permissions: {
    admin: boolean
    read: boolean
    write: boolean
  }
  private?: boolean
  state: string
  updated_at: string
  url: string
}

export type t_team_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  role_name?: string
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_team_role_assignment = {
  assignment?: "direct" | "indirect" | "mixed" | UnknownEnumStringValue
  description: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  node_id: string
  notification_setting?: string
  parent: t_nullable_team_simple
  permission: string
  permissions?: {
    admin: boolean
    maintain: boolean
    pull: boolean
    push: boolean
    triage: boolean
  }
  privacy?: string
  repositories_url: string
  slug: string
  url: string
}

export type t_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_url: string
  name: string
  node_id: string
  notification_setting?: string
  permission: string
  privacy?: string
  repositories_url: string
  slug: string
  url: string
}

export type t_thread = {
  id: string
  last_read_at: string | null
  reason: string
  repository: t_minimal_repository
  subject: {
    latest_comment_url: string
    title: string
    type: string
    url: string
  }
  subscription_url: string
  unread: boolean
  updated_at: string
  url: string
}

export type t_thread_subscription = {
  created_at: string | null
  ignored: boolean
  reason: string | null
  repository_url?: string
  subscribed: boolean
  thread_url?: string
  url: string
}

export type t_timeline_assigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_timeline_comment_event = {
  actor: t_simple_user
  author_association: t_author_association
  body?: string
  body_html?: string
  body_text?: string
  created_at: string
  event: string
  html_url: string
  id: number
  issue_url: string
  node_id: string
  performed_via_github_app?: t_nullable_integration
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_timeline_commit_commented_event = {
  comments?: t_commit_comment[]
  commit_id?: string
  event?: string
  node_id?: string
}

export type t_timeline_committed_event = {
  author: {
    date: string
    email: string
    name: string
  }
  committer: {
    date: string
    email: string
    name: string
  }
  event?: string
  html_url: string
  message: string
  node_id: string
  parents: {
    html_url: string
    sha: string
    url: string
  }[]
  sha: string
  tree: {
    sha: string
    url: string
  }
  url: string
  verification: {
    payload: string | null
    reason: string
    signature: string | null
    verified: boolean
    verified_at: string | null
  }
}

export type t_timeline_cross_referenced_event = {
  actor?: t_simple_user
  created_at: string
  event: string
  source: {
    issue?: t_issue
    type?: string
  }
  updated_at: string
}

export type t_timeline_issue_events =
  | t_labeled_issue_event
  | t_unlabeled_issue_event
  | t_milestoned_issue_event
  | t_demilestoned_issue_event
  | t_renamed_issue_event
  | t_review_requested_issue_event
  | t_review_request_removed_issue_event
  | t_review_dismissed_issue_event
  | t_locked_issue_event
  | t_added_to_project_issue_event
  | t_moved_column_in_project_issue_event
  | t_removed_from_project_issue_event
  | t_converted_note_to_issue_issue_event
  | t_timeline_comment_event
  | t_timeline_cross_referenced_event
  | t_timeline_committed_event
  | t_timeline_reviewed_event
  | t_timeline_line_commented_event
  | t_timeline_commit_commented_event
  | t_timeline_assigned_issue_event
  | t_timeline_unassigned_issue_event
  | t_state_change_issue_event

export type t_timeline_line_commented_event = {
  comments?: t_pull_request_review_comment[]
  event?: string
  node_id?: string
}

export type t_timeline_reviewed_event = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
  }
  author_association: t_author_association
  body: string | null
  body_html?: string
  body_text?: string
  commit_id: string
  event: string
  html_url: string
  id: number
  node_id: string
  pull_request_url: string
  state: string
  submitted_at?: string
  user: t_simple_user
}

export type t_timeline_unassigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_topic = {
  names: string[]
}

export type t_topic_search_result_item = {
  aliases?:
    | {
        topic_relation?: {
          id?: number
          name?: string
          relation_type?: string
          topic_id?: number
        }
      }[]
    | null
  created_at: string
  created_by: string | null
  curated: boolean
  description: string | null
  display_name: string | null
  featured: boolean
  logo_url?: string | null
  name: string
  related?:
    | {
        topic_relation?: {
          id?: number
          name?: string
          relation_type?: string
          topic_id?: number
        }
      }[]
    | null
  released: string | null
  repository_count?: number | null
  score: number
  short_description: string | null
  text_matches?: t_search_result_text_matches
  updated_at: string
}

export type t_traffic = {
  count: number
  timestamp: string
  uniques: number
}

export type t_unassigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  assigner: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_unlabeled_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  label: {
    color: string
    name: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_user_marketplace_purchase = {
  account: t_marketplace_account
  billing_cycle: string
  free_trial_ends_on: string | null
  next_billing_date: string | null
  on_free_trial: boolean
  plan: t_marketplace_listing_plan
  unit_count: number | null
  updated_at: string | null
}

export type t_user_role_assignment = {
  assignment?: "direct" | "indirect" | "mixed" | UnknownEnumStringValue
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  inherited_from?: t_team_simple[]
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string
}

export type t_user_search_result_item = {
  avatar_url: string
  bio?: string | null
  blog?: string | null
  company?: string | null
  created_at?: string
  email?: string | null
  events_url: string
  followers?: number
  followers_url: string
  following?: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable?: boolean | null
  html_url: string
  id: number
  location?: string | null
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  public_gists?: number
  public_repos?: number
  received_events_url: string
  repos_url: string
  score: number
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  suspended_at?: string | null
  text_matches?: t_search_result_text_matches
  type: string
  updated_at?: string
  url: string
  user_view_type?: string
}

export type t_validation_error = {
  documentation_url: string
  errors?: {
    code: string
    field?: string
    index?: number
    message?: string
    resource?: string
    value?: string | null | number | string[]
  }[]
  message: string
}

export type t_validation_error_simple = {
  documentation_url: string
  errors?: string[]
  message: string
}

export type t_verification = {
  payload: string | null
  reason: string
  signature: string | null
  verified: boolean
  verified_at: string | null
}

export type t_view_traffic = {
  count: number
  uniques: number
  views: t_traffic[]
}

export type t_vulnerability = {
  first_patched_version: string | null
  package: {
    ecosystem: t_security_advisory_ecosystems
    name: string | null
  } | null
  readonly vulnerable_functions: string[] | null
  vulnerable_version_range: string | null
}

export type t_wait_timer = number

export type t_webhook_config = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_webhook_config_content_type = string

export type t_webhook_config_insecure_ssl = string | number

export type t_webhook_config_secret = string

export type t_webhook_config_url = string

export type t_workflow = {
  badge_url: string
  created_at: string
  deleted_at?: string
  html_url: string
  id: number
  name: string
  node_id: string
  path: string
  state:
    | "active"
    | "deleted"
    | "disabled_fork"
    | "disabled_inactivity"
    | "disabled_manually"
    | UnknownEnumStringValue
  updated_at: string
  url: string
}

export type t_workflow_run = {
  actor?: t_simple_user
  artifacts_url: string
  cancel_url: string
  check_suite_id?: number
  check_suite_node_id?: string
  check_suite_url: string
  conclusion: string | null
  created_at: string
  display_title: string
  event: string
  head_branch: string | null
  head_commit: t_nullable_simple_commit
  head_repository: t_minimal_repository
  head_repository_id?: number
  head_sha: string
  html_url: string
  id: number
  jobs_url: string
  logs_url: string
  name?: string | null
  node_id: string
  path: string
  previous_attempt_url?: string | null
  pull_requests: t_pull_request_minimal[] | null
  referenced_workflows?: t_referenced_workflow[] | null
  repository: t_minimal_repository
  rerun_url: string
  run_attempt?: number
  run_number: number
  run_started_at?: string
  status: string | null
  triggering_actor?: t_simple_user
  updated_at: string
  url: string
  workflow_id: number
  workflow_url: string
}

export type t_workflow_run_usage = {
  billable: {
    MACOS?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
    UBUNTU?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
    WINDOWS?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
  }
  run_duration_ms?: number
}

export type t_workflow_usage = {
  billable: {
    MACOS?: {
      total_ms?: number
    }
    UBUNTU?: {
      total_ms?: number
    }
    WINDOWS?: {
      total_ms?: number
    }
  }
}

export type t_interactionsGetRestrictionsForAuthenticatedUserJson200Response =
  | t_interaction_limit_response
  | EmptyObject

export type t_interactionsGetRestrictionsForOrgJson200Response =
  | t_interaction_limit_response
  | EmptyObject

export type t_interactionsGetRestrictionsForRepoJson200Response =
  | t_interaction_limit_response
  | EmptyObject

export type t_issuesAddAssigneesJsonRequestBody = {
  assignees?: string[]
}

export type t_issuesAddLabelsJsonRequestBody =
  | {
      labels?: string[]
    }
  | string[]
  | {
      labels?: {
        name: string
      }[]
    }
  | {
      name: string
    }[]
  | string

export type t_issuesAddSubIssueJsonRequestBody = {
  replace_parent?: boolean
  sub_issue_id: number
}

export type t_issuesCreateJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_issuesCreateJsonRequestBody = {
  assignee?: string | null
  assignees?: string[]
  body?: string
  labels?: (
    | string
    | {
        color?: string | null
        description?: string | null
        id?: number
        name?: string
      }
  )[]
  milestone?: string | number | null
  title: string | number
  type?: string | null
}

export type t_issuesCreateCommentJsonRequestBody = {
  body: string
}

export type t_issuesCreateLabelJsonRequestBody = {
  color?: string
  description?: string
  name: string
}

export type t_issuesCreateMilestoneJsonRequestBody = {
  description?: string
  due_on?: string
  state?: "open" | "closed" | UnknownEnumStringValue
  title: string
}

export type t_issuesLockJsonRequestBody = {
  lock_reason?:
    | "off-topic"
    | "too heated"
    | "resolved"
    | "spam"
    | UnknownEnumStringValue
} | null

export type t_issuesRemoveAssigneesJsonRequestBody = {
  assignees?: string[]
}

export type t_issuesRemoveSubIssueJsonRequestBody = {
  sub_issue_id: number
}

export type t_issuesReprioritizeSubIssueJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_issuesReprioritizeSubIssueJsonRequestBody = {
  after_id?: number
  before_id?: number
  sub_issue_id: number
}

export type t_issuesSetLabelsJsonRequestBody =
  | {
      labels?: string[]
    }
  | string[]
  | {
      labels?: {
        name: string
      }[]
    }
  | {
      name: string
    }[]
  | string

export type t_issuesUpdateJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_issuesUpdateJsonRequestBody = {
  assignee?: string | null
  assignees?: string[]
  body?: string | null
  labels?: (
    | string
    | {
        color?: string | null
        description?: string | null
        id?: number
        name?: string
      }
  )[]
  milestone?: string | number | null
  state?: "open" | "closed" | UnknownEnumStringValue
  state_reason?:
    | "completed"
    | "not_planned"
    | "reopened"
    | UnknownEnumStringValue
    | null
  title?: string | number | null
  type?: string | null
}

export type t_issuesUpdateCommentJsonRequestBody = {
  body: string
}

export type t_issuesUpdateLabelJsonRequestBody = {
  color?: string
  description?: string
  new_name?: string
}

export type t_issuesUpdateMilestoneJsonRequestBody = {
  description?: string
  due_on?: string
  state?: "open" | "closed" | UnknownEnumStringValue
  title?: string
}

export type t_markdownRenderJsonRequestBody = {
  context?: string
  mode?: "markdown" | "gfm" | UnknownEnumStringValue
  text: string
}

export type t_migrationsMapCommitAuthorJsonRequestBody = {
  email?: string
  name?: string
}

export type t_migrationsSetLfsPreferenceJsonRequestBody = {
  use_lfs: "opt_in" | "opt_out" | UnknownEnumStringValue
}

export type t_migrationsStartForAuthenticatedUserJsonRequestBody = {
  exclude?: ("repositories" | UnknownEnumStringValue)[]
  exclude_attachments?: boolean
  exclude_git_data?: boolean
  exclude_metadata?: boolean
  exclude_owner_projects?: boolean
  exclude_releases?: boolean
  lock_repositories?: boolean
  org_metadata_only?: boolean
  repositories: string[]
}

export type t_migrationsStartForOrgJsonRequestBody = {
  exclude?: ("repositories" | UnknownEnumStringValue)[]
  exclude_attachments?: boolean
  exclude_git_data?: boolean
  exclude_metadata?: boolean
  exclude_owner_projects?: boolean
  exclude_releases?: boolean
  lock_repositories?: boolean
  org_metadata_only?: boolean
  repositories: string[]
}

export type t_migrationsStartImportJsonRequestBody = {
  tfvc_project?: string
  vcs?: "subversion" | "git" | "mercurial" | "tfvc" | UnknownEnumStringValue
  vcs_password?: string
  vcs_url: string
  vcs_username?: string
}

export type t_migrationsUpdateImportJsonRequestBody = {
  tfvc_project?: string
  vcs?: "subversion" | "tfvc" | "git" | "mercurial" | UnknownEnumStringValue
  vcs_password?: string
  vcs_username?: string
} | null

export type t_orgsConvertMemberToOutsideCollaboratorJson202Response =
  EmptyObject

export type t_orgsConvertMemberToOutsideCollaboratorJsonRequestBody = {
  async?: boolean
}

export type t_orgsCreateInvitationJsonRequestBody = {
  email?: string
  invitee_id?: number
  role?:
    | "admin"
    | "direct_member"
    | "billing_manager"
    | "reinstate"
    | UnknownEnumStringValue
  team_ids?: number[]
}

export type t_orgsCreateOrUpdateCustomPropertiesJsonRequestBody = {
  properties: t_custom_property[]
}

export type t_orgsCreateOrUpdateCustomPropertiesValuesForReposJsonRequestBody =
  {
    properties: t_custom_property_value[]
    repository_names: string[]
  }

export type t_orgsCreateWebhookJsonRequestBody = {
  active?: boolean
  config: {
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    password?: string
    secret?: t_webhook_config_secret
    url: t_webhook_config_url
    username?: string
  }
  events?: string[]
  name: string
}

export type t_orgsDeleteJson202Response = {
  [key: string]: unknown | undefined
}

export type t_orgsEnableOrDisableSecurityProductOnAllOrgReposJsonRequestBody = {
  query_suite?: "default" | "extended" | UnknownEnumStringValue
}

export type t_orgsListAppInstallationsJson200Response = {
  installations: t_installation[]
  total_count: number
}

export type t_orgsListAttestationsJson200Response = {
  attestations?: {
    bundle?: {
      dsseEnvelope?: {
        [key: string]: unknown | undefined
      }
      mediaType?: string
      verificationMaterial?: {
        [key: string]: unknown | undefined
      }
    }
    bundle_url?: string
    repository_id?: number
  }[]
}

export type t_orgsListOrgRolesJson200Response = {
  roles?: t_organization_role[]
  total_count?: number
}

export type t_orgsRedeliverWebhookDeliveryJson202Response = {
  [key: string]: unknown | undefined
}

export type t_orgsRemoveOutsideCollaboratorJson422Response = {
  documentation_url?: string
  message?: string
}

export type t_orgsReviewPatGrantRequestJsonRequestBody = {
  action: "approve" | "deny" | UnknownEnumStringValue
  reason?: string | null
}

export type t_orgsReviewPatGrantRequestsInBulkJson202Response = {
  [key: string]: unknown | undefined
}

export type t_orgsReviewPatGrantRequestsInBulkJsonRequestBody = {
  action: "approve" | "deny" | UnknownEnumStringValue
  pat_request_ids?: number[]
  reason?: string | null
}

export type t_orgsSetMembershipForUserJsonRequestBody = {
  role?: "admin" | "member" | UnknownEnumStringValue
}

export type t_orgsUpdateJson422Response =
  | t_validation_error
  | t_validation_error_simple

export type t_orgsUpdateJsonRequestBody = {
  advanced_security_enabled_for_new_repositories?: boolean
  billing_email?: string
  blog?: string
  company?: string
  default_repository_permission?:
    | "read"
    | "write"
    | "admin"
    | "none"
    | UnknownEnumStringValue
  dependabot_alerts_enabled_for_new_repositories?: boolean
  dependabot_security_updates_enabled_for_new_repositories?: boolean
  dependency_graph_enabled_for_new_repositories?: boolean
  deploy_keys_enabled_for_repositories?: boolean
  description?: string
  email?: string
  has_organization_projects?: boolean
  has_repository_projects?: boolean
  location?: string
  members_allowed_repository_creation_type?:
    | "all"
    | "private"
    | "none"
    | UnknownEnumStringValue
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean
  members_can_fork_private_repositories?: boolean
  name?: string
  secret_scanning_enabled_for_new_repositories?: boolean
  secret_scanning_push_protection_custom_link?: string
  secret_scanning_push_protection_custom_link_enabled?: boolean
  secret_scanning_push_protection_enabled_for_new_repositories?: boolean
  twitter_username?: string
  web_commit_signoff_required?: boolean
}

export type t_orgsUpdateMembershipForAuthenticatedUserJsonRequestBody = {
  state: "active" | UnknownEnumStringValue
}

export type t_orgsUpdatePatAccessJsonRequestBody = {
  action: "revoke" | UnknownEnumStringValue
}

export type t_orgsUpdatePatAccessesJson202Response = {
  [key: string]: unknown | undefined
}

export type t_orgsUpdatePatAccessesJsonRequestBody = {
  action: "revoke" | UnknownEnumStringValue
  pat_ids: number[]
}

export type t_orgsUpdateWebhookJsonRequestBody = {
  active?: boolean
  config?: {
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    secret?: t_webhook_config_secret
    url: t_webhook_config_url
  }
  events?: string[]
  name?: string
}

export type t_orgsUpdateWebhookConfigForOrgJsonRequestBody = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_privateRegistriesCreateOrgPrivateRegistryJsonRequestBody = {
  encrypted_value: string
  key_id: string
  registry_type: "maven_repository" | UnknownEnumStringValue
  selected_repository_ids?: number[]
  username?: string | null
  visibility: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_privateRegistriesGetOrgPublicKeyJson200Response = {
  key: string
  key_id: string
}

export type t_privateRegistriesListOrgPrivateRegistriesJson200Response = {
  configurations: t_org_private_registry_configuration[]
  total_count: number
}

export type t_privateRegistriesUpdateOrgPrivateRegistryJsonRequestBody = {
  encrypted_value?: string
  key_id?: string
  registry_type?: "maven_repository" | UnknownEnumStringValue
  selected_repository_ids?: number[]
  username?: string | null
  visibility?: "all" | "private" | "selected" | UnknownEnumStringValue
}

export type t_projectsAddCollaboratorJsonRequestBody = {
  permission?: "read" | "write" | "admin" | UnknownEnumStringValue
} | null

export type t_projectsCreateCardJson422Response =
  | t_validation_error
  | t_validation_error_simple

export type t_projectsCreateCardJson503Response = {
  code?: string
  documentation_url?: string
  errors?: {
    code?: string
    message?: string
  }[]
  message?: string
}

export type t_projectsCreateCardJsonRequestBody =
  | {
      note: string | null
    }
  | {
      content_id: number
      content_type: string
    }

export type t_projectsCreateColumnJsonRequestBody = {
  name: string
}

export type t_projectsCreateForAuthenticatedUserJsonRequestBody = {
  body?: string | null
  name: string
}

export type t_projectsCreateForOrgJsonRequestBody = {
  body?: string
  name: string
}

export type t_projectsCreateForRepoJsonRequestBody = {
  body?: string
  name: string
}

export type t_projectsDeleteJson403Response = {
  documentation_url?: string
  errors?: string[]
  message?: string
}

export type t_projectsDeleteCardJson403Response = {
  documentation_url?: string
  errors?: string[]
  message?: string
}

export type t_projectsMoveCardJson201Response = EmptyObject

export type t_projectsMoveCardJson403Response = {
  documentation_url?: string
  errors?: {
    code?: string
    field?: string
    message?: string
    resource?: string
  }[]
  message?: string
}

export type t_projectsMoveCardJson503Response = {
  code?: string
  documentation_url?: string
  errors?: {
    code?: string
    message?: string
  }[]
  message?: string
}

export type t_projectsMoveCardJsonRequestBody = {
  column_id?: number
  position: string
}

export type t_projectsMoveColumnJson201Response = EmptyObject

export type t_projectsMoveColumnJsonRequestBody = {
  position: string
}

export type t_projectsUpdateJson403Response = {
  documentation_url?: string
  errors?: string[]
  message?: string
}

export type t_projectsUpdateJsonRequestBody = {
  body?: string | null
  name?: string
  organization_permission?:
    | "read"
    | "write"
    | "admin"
    | "none"
    | UnknownEnumStringValue
  private?: boolean
  state?: string
}

export type t_projectsUpdateCardJsonRequestBody = {
  archived?: boolean
  note?: string | null
}

export type t_projectsUpdateColumnJsonRequestBody = {
  name: string
}

export type t_pullsCreateJsonRequestBody = {
  base: string
  body?: string
  draft?: boolean
  head: string
  head_repo?: string
  issue?: number
  maintainer_can_modify?: boolean
  title?: string
}

export type t_pullsCreateReplyForReviewCommentJsonRequestBody = {
  body: string
}

export type t_pullsCreateReviewJsonRequestBody = {
  body?: string
  comments?: {
    body: string
    line?: number
    path: string
    position?: number
    side?: string
    start_line?: number
    start_side?: string
  }[]
  commit_id?: string
  event?: "APPROVE" | "REQUEST_CHANGES" | "COMMENT" | UnknownEnumStringValue
}

export type t_pullsCreateReviewCommentJsonRequestBody = {
  body: string
  commit_id: string
  in_reply_to?: number
  line?: number
  path: string
  position?: number
  side?: "LEFT" | "RIGHT" | UnknownEnumStringValue
  start_line?: number
  start_side?: "LEFT" | "RIGHT" | "side" | UnknownEnumStringValue
  subject_type?: "line" | "file" | UnknownEnumStringValue
}

export type t_pullsDismissReviewJsonRequestBody = {
  event?: "DISMISS" | UnknownEnumStringValue
  message: string
}

export type t_pullsGetJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_pullsListFilesJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_pullsMergeJson405Response = {
  documentation_url?: string
  message?: string
}

export type t_pullsMergeJson409Response = {
  documentation_url?: string
  message?: string
}

export type t_pullsMergeJsonRequestBody = {
  commit_message?: string
  commit_title?: string
  merge_method?: "merge" | "squash" | "rebase" | UnknownEnumStringValue
  sha?: string
} | null

export type t_pullsRemoveRequestedReviewersJsonRequestBody = {
  reviewers: string[]
  team_reviewers?: string[]
}

export type t_pullsRequestReviewersJsonRequestBody = {
  reviewers?: string[]
  team_reviewers?: string[]
}

export type t_pullsSubmitReviewJsonRequestBody = {
  body?: string
  event: "APPROVE" | "REQUEST_CHANGES" | "COMMENT" | UnknownEnumStringValue
}

export type t_pullsUpdateJsonRequestBody = {
  base?: string
  body?: string
  maintainer_can_modify?: boolean
  state?: "open" | "closed" | UnknownEnumStringValue
  title?: string
}

export type t_pullsUpdateBranchJson202Response = {
  message?: string
  url?: string
}

export type t_pullsUpdateBranchJsonRequestBody = {
  expected_head_sha?: string
} | null

export type t_pullsUpdateReviewJsonRequestBody = {
  body: string
}

export type t_pullsUpdateReviewCommentJsonRequestBody = {
  body: string
}

export type t_reactionsCreateForCommitCommentJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForIssueJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForIssueCommentJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForPullRequestReviewCommentJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForReleaseJsonRequestBody = {
  content:
    | "+1"
    | "laugh"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForTeamDiscussionCommentInOrgJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForTeamDiscussionCommentLegacyJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForTeamDiscussionInOrgJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reactionsCreateForTeamDiscussionLegacyJsonRequestBody = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
    | UnknownEnumStringValue
}

export type t_reposAddAppAccessRestrictionsJsonRequestBody = {
  apps: string[]
}

export type t_reposAddCollaboratorJsonRequestBody = {
  permission?: string
}

export type t_reposAddStatusCheckContextsJsonRequestBody =
  | {
      contexts: string[]
    }
  | string[]

export type t_reposAddTeamAccessRestrictionsJsonRequestBody =
  | {
      teams: string[]
    }
  | string[]

export type t_reposAddUserAccessRestrictionsJsonRequestBody = {
  users: string[]
}

export type t_reposCheckPrivateVulnerabilityReportingJson200Response = {
  enabled: boolean
}

export type t_reposCompareCommitsJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_reposCreateAttestationJson201Response = {
  id?: number
}

export type t_reposCreateAttestationJsonRequestBody = {
  bundle: {
    dsseEnvelope?: {
      [key: string]: unknown | undefined
    }
    mediaType?: string
    verificationMaterial?: {
      [key: string]: unknown | undefined
    }
  }
}

export type t_reposCreateAutolinkJsonRequestBody = {
  is_alphanumeric?: boolean
  key_prefix: string
  url_template: string
}

export type t_reposCreateCommitCommentJsonRequestBody = {
  body: string
  line?: number
  path?: string
  position?: number
}

export type t_reposCreateCommitStatusJsonRequestBody = {
  context?: string
  description?: string | null
  state: "error" | "failure" | "pending" | "success" | UnknownEnumStringValue
  target_url?: string | null
}

export type t_reposCreateDeployKeyJsonRequestBody = {
  key: string
  read_only?: boolean
  title?: string
}

export type t_reposCreateDeploymentJson202Response = {
  message?: string
}

export type t_reposCreateDeploymentJsonRequestBody = {
  auto_merge?: boolean
  description?: string | null
  environment?: string
  payload?:
    | {
        [key: string]: unknown | undefined
      }
    | string
  production_environment?: boolean
  ref: string
  required_contexts?: string[]
  task?: string
  transient_environment?: boolean
}

export type t_reposCreateDeploymentProtectionRuleJsonRequestBody = {
  integration_id?: number
}

export type t_reposCreateDeploymentStatusJsonRequestBody = {
  auto_inactive?: boolean
  description?: string
  environment?: string
  environment_url?: string
  log_url?: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "in_progress"
    | "queued"
    | "pending"
    | "success"
    | UnknownEnumStringValue
  target_url?: string
}

export type t_reposCreateDispatchEventJsonRequestBody = {
  client_payload?: {
    [key: string]: unknown | undefined
  }
  event_type: string
}

export type t_reposCreateForAuthenticatedUserJsonRequestBody = {
  allow_auto_merge?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  name: string
  private?: boolean
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  team_id?: number
}

export type t_reposCreateForkJsonRequestBody = {
  default_branch_only?: boolean
  name?: string
  organization?: string
} | null

export type t_reposCreateInOrgJsonRequestBody = {
  allow_auto_merge?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  custom_properties?: {
    [key: string]: unknown | undefined
  }
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_downloads?: boolean
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  name: string
  private?: boolean
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  team_id?: number
  use_squash_pr_title_as_default?: boolean
  visibility?: "public" | "private" | UnknownEnumStringValue
}

export type t_reposCreateOrUpdateCustomPropertiesValuesJsonRequestBody = {
  properties: t_custom_property_value[]
}

export type t_reposCreateOrUpdateEnvironmentJsonRequestBody = {
  deployment_branch_policy?: t_deployment_branch_policy_settings
  prevent_self_review?: t_prevent_self_review
  reviewers?:
    | {
        id?: number
        type?: t_deployment_reviewer_type
      }[]
    | null
  wait_timer?: t_wait_timer
} | null

export type t_reposCreateOrUpdateFileContentsJson409Response =
  | t_basic_error
  | t_repository_rule_violation_error

export type t_reposCreateOrUpdateFileContentsJsonRequestBody = {
  author?: {
    date?: string
    email: string
    name: string
  }
  branch?: string
  committer?: {
    date?: string
    email: string
    name: string
  }
  content: string
  message: string
  sha?: string
}

export type t_reposCreateOrgRulesetJsonRequestBody = {
  bypass_actors?: t_repository_ruleset_bypass_actor[]
  conditions?: t_org_ruleset_conditions
  enforcement: t_repository_rule_enforcement
  name: string
  rules?: t_repository_rule[]
  target?: "branch" | "tag" | "push" | "repository" | UnknownEnumStringValue
}

export type t_reposCreatePagesDeploymentJsonRequestBody = {
  artifact_id?: number
  artifact_url?: string
  environment?: string
  oidc_token: string
  pages_build_version: string
}

export type t_reposCreatePagesSiteJsonRequestBody = {
  build_type?: "legacy" | "workflow" | UnknownEnumStringValue
  source?: {
    branch: string
    path?: "/" | "/docs" | UnknownEnumStringValue
  }
} | null

export type t_reposCreateReleaseJsonRequestBody = {
  body?: string
  discussion_category_name?: string
  draft?: boolean
  generate_release_notes?: boolean
  make_latest?: "true" | "false" | "legacy" | UnknownEnumStringValue
  name?: string
  prerelease?: boolean
  tag_name: string
  target_commitish?: string
}

export type t_reposCreateRepoRulesetJsonRequestBody = {
  bypass_actors?: t_repository_ruleset_bypass_actor[]
  conditions?: t_repository_ruleset_conditions
  enforcement: t_repository_rule_enforcement
  name: string
  rules?: t_repository_rule[]
  target?: "branch" | "tag" | "push" | UnknownEnumStringValue
}

export type t_reposCreateTagProtectionJsonRequestBody = {
  pattern: string
}

export type t_reposCreateUsingTemplateJsonRequestBody = {
  description?: string
  include_all_branches?: boolean
  name: string
  owner?: string
  private?: boolean
}

export type t_reposCreateWebhookJsonRequestBody = {
  active?: boolean
  config?: {
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    secret?: t_webhook_config_secret
    url?: t_webhook_config_url
  }
  events?: string[]
  name?: string
} | null

export type t_reposDeleteJson403Response = {
  documentation_url?: string
  message?: string
}

export type t_reposDeleteFileJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_reposDeleteFileJsonRequestBody = {
  author?: {
    email?: string
    name?: string
  }
  branch?: string
  committer?: {
    email?: string
    name?: string
  }
  message: string
  sha: string
}

export type t_reposGenerateReleaseNotesJsonRequestBody = {
  configuration_file_path?: string
  previous_tag_name?: string
  tag_name: string
  target_commitish?: string
}

export type t_reposGetAllDeploymentProtectionRulesJson200Response = {
  custom_deployment_protection_rules?: t_deployment_protection_rule[]
  total_count?: number
}

export type t_reposGetAllEnvironmentsJson200Response = {
  environments?: t_environment[]
  total_count?: number
}

export type t_reposGetCodeFrequencyStatsJson202Response = {
  [key: string]: unknown | undefined
}

export type t_reposGetCommitJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_reposGetCommitActivityStatsJson202Response = {
  [key: string]: unknown | undefined
}

export type t_reposGetContentJson200Response =
  | t_content_directory
  | t_content_file
  | t_content_symlink
  | t_content_submodule

export type t_reposGetContributorsStatsJson202Response = {
  [key: string]: unknown | undefined
}

export type t_reposListAttestationsJson200Response = {
  attestations?: {
    bundle?: {
      dsseEnvelope?: {
        [key: string]: unknown | undefined
      }
      mediaType?: string
      verificationMaterial?: {
        [key: string]: unknown | undefined
      }
    }
    bundle_url?: string
    repository_id?: number
  }[]
}

export type t_reposListCustomDeploymentRuleIntegrationsJson200Response = {
  available_custom_deployment_protection_rule_integrations?: t_custom_deployment_rule_app[]
  total_count?: number
}

export type t_reposListDeploymentBranchPoliciesJson200Response = {
  branch_policies: t_deployment_branch_policy[]
  total_count: number
}

export type t_reposMergeJsonRequestBody = {
  base: string
  commit_message?: string
  head: string
}

export type t_reposMergeUpstreamJsonRequestBody = {
  branch: string
}

export type t_reposRedeliverWebhookDeliveryJson202Response = {
  [key: string]: unknown | undefined
}

export type t_reposRemoveAppAccessRestrictionsJsonRequestBody = {
  apps: string[]
}

export type t_reposRemoveStatusCheckContextsJsonRequestBody =
  | {
      contexts: string[]
    }
  | string[]

export type t_reposRemoveTeamAccessRestrictionsJsonRequestBody =
  | {
      teams: string[]
    }
  | string[]

export type t_reposRemoveUserAccessRestrictionsJsonRequestBody = {
  users: string[]
}

export type t_reposRenameBranchJsonRequestBody = {
  new_name: string
}

export type t_reposReplaceAllTopicsJsonRequestBody = {
  names: string[]
}

export type t_reposSetAppAccessRestrictionsJsonRequestBody = {
  apps: string[]
}

export type t_reposSetStatusCheckContextsJsonRequestBody =
  | {
      contexts: string[]
    }
  | string[]

export type t_reposSetTeamAccessRestrictionsJsonRequestBody =
  | {
      teams: string[]
    }
  | string[]

export type t_reposSetUserAccessRestrictionsJsonRequestBody = {
  users: string[]
}

export type t_reposTransferJsonRequestBody = {
  new_name?: string
  new_owner: string
  team_ids?: number[]
}

export type t_reposUpdateJsonRequestBody = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  archived?: boolean
  default_branch?: string
  delete_branch_on_merge?: boolean
  description?: string
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  merge_commit_message?:
    | "PR_BODY"
    | "PR_TITLE"
    | "BLANK"
    | UnknownEnumStringValue
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE" | UnknownEnumStringValue
  name?: string
  private?: boolean
  security_and_analysis?: {
    advanced_security?: {
      status?: string
    }
    code_security?: {
      status?: string
    }
    secret_scanning?: {
      status?: string
    }
    secret_scanning_ai_detection?: {
      status?: string
    }
    secret_scanning_non_provider_patterns?: {
      status?: string
    }
    secret_scanning_push_protection?: {
      status?: string
    }
  } | null
  squash_merge_commit_message?:
    | "PR_BODY"
    | "COMMIT_MESSAGES"
    | "BLANK"
    | UnknownEnumStringValue
  squash_merge_commit_title?:
    | "PR_TITLE"
    | "COMMIT_OR_PR_TITLE"
    | UnknownEnumStringValue
  use_squash_pr_title_as_default?: boolean
  visibility?: "public" | "private" | UnknownEnumStringValue
  web_commit_signoff_required?: boolean
}

export type t_reposUpdateBranchProtectionJsonRequestBody = {
  allow_deletions?: boolean
  allow_force_pushes?: boolean | null
  allow_fork_syncing?: boolean
  block_creations?: boolean
  enforce_admins: boolean | null
  lock_branch?: boolean
  required_conversation_resolution?: boolean
  required_linear_history?: boolean
  required_pull_request_reviews: {
    bypass_pull_request_allowances?: {
      apps?: string[]
      teams?: string[]
      users?: string[]
    }
    dismiss_stale_reviews?: boolean
    dismissal_restrictions?: {
      apps?: string[]
      teams?: string[]
      users?: string[]
    }
    require_code_owner_reviews?: boolean
    require_last_push_approval?: boolean
    required_approving_review_count?: number
  } | null
  required_status_checks: {
    checks?: {
      app_id?: number
      context: string
    }[]
    contexts: string[]
    strict: boolean
  } | null
  restrictions: {
    apps?: string[]
    teams: string[]
    users: string[]
  } | null
}

export type t_reposUpdateCommitCommentJsonRequestBody = {
  body: string
}

export type t_reposUpdateInformationAboutPagesSiteJsonRequestBody = {
  build_type?: "legacy" | "workflow" | UnknownEnumStringValue
  cname?: string | null
  https_enforced?: boolean
  source?:
    | "gh-pages"
    | "master"
    | "master /docs"
    | UnknownEnumStringValue
    | {
        branch: string
        path: "/" | "/docs" | UnknownEnumStringValue
      }
}

export type t_reposUpdateInvitationJsonRequestBody = {
  permissions?:
    | "read"
    | "write"
    | "maintain"
    | "triage"
    | "admin"
    | UnknownEnumStringValue
}

export type t_reposUpdateOrgRulesetJsonRequestBody = {
  bypass_actors?: t_repository_ruleset_bypass_actor[]
  conditions?: t_org_ruleset_conditions
  enforcement?: t_repository_rule_enforcement
  name?: string
  rules?: t_repository_rule[]
  target?: "branch" | "tag" | "push" | "repository" | UnknownEnumStringValue
}

export type t_reposUpdatePullRequestReviewProtectionJsonRequestBody = {
  bypass_pull_request_allowances?: {
    apps?: string[]
    teams?: string[]
    users?: string[]
  }
  dismiss_stale_reviews?: boolean
  dismissal_restrictions?: {
    apps?: string[]
    teams?: string[]
    users?: string[]
  }
  require_code_owner_reviews?: boolean
  require_last_push_approval?: boolean
  required_approving_review_count?: number
}

export type t_reposUpdateReleaseJsonRequestBody = {
  body?: string
  discussion_category_name?: string
  draft?: boolean
  make_latest?: "true" | "false" | "legacy" | UnknownEnumStringValue
  name?: string
  prerelease?: boolean
  tag_name?: string
  target_commitish?: string
}

export type t_reposUpdateReleaseAssetJsonRequestBody = {
  label?: string
  name?: string
  state?: string
}

export type t_reposUpdateRepoRulesetJsonRequestBody = {
  bypass_actors?: t_repository_ruleset_bypass_actor[]
  conditions?: t_repository_ruleset_conditions
  enforcement?: t_repository_rule_enforcement
  name?: string
  rules?: t_repository_rule[]
  target?: "branch" | "tag" | "push" | UnknownEnumStringValue
}

export type t_reposUpdateStatusCheckProtectionJsonRequestBody = {
  checks?: {
    app_id?: number
    context: string
  }[]
  contexts?: string[]
  strict?: boolean
}

export type t_reposUpdateWebhookJsonRequestBody = {
  active?: boolean
  add_events?: string[]
  config?: t_webhook_config
  events?: string[]
  remove_events?: string[]
}

export type t_reposUpdateWebhookConfigForRepoJsonRequestBody = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_searchCodeJson200Response = {
  incomplete_results: boolean
  items: t_code_search_result_item[]
  total_count: number
}

export type t_searchCodeJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_searchCommitsJson200Response = {
  incomplete_results: boolean
  items: t_commit_search_result_item[]
  total_count: number
}

export type t_searchIssuesAndPullRequestsJson200Response = {
  incomplete_results: boolean
  items: t_issue_search_result_item[]
  total_count: number
}

export type t_searchIssuesAndPullRequestsJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_searchLabelsJson200Response = {
  incomplete_results: boolean
  items: t_label_search_result_item[]
  total_count: number
}

export type t_searchReposJson200Response = {
  incomplete_results: boolean
  items: t_repo_search_result_item[]
  total_count: number
}

export type t_searchReposJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_searchTopicsJson200Response = {
  incomplete_results: boolean
  items: t_topic_search_result_item[]
  total_count: number
}

export type t_searchUsersJson200Response = {
  incomplete_results: boolean
  items: t_user_search_result_item[]
  total_count: number
}

export type t_searchUsersJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningCreatePushProtectionBypassJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningCreatePushProtectionBypassJsonRequestBody = {
  placeholder_id: t_secret_scanning_push_protection_bypass_placeholder_id
  reason: t_secret_scanning_push_protection_bypass_reason
}

export type t_secretScanningGetAlertJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningGetScanHistoryJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningListAlertsForEnterpriseJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningListAlertsForOrgJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningListAlertsForRepoJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningListLocationsForAlertJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningUpdateAlertJson503Response = {
  code?: string
  documentation_url?: string
  message?: string
}

export type t_secretScanningUpdateAlertJsonRequestBody = {
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: t_secret_scanning_alert_resolution_comment
  state: t_secret_scanning_alert_state
}

export type t_securityAdvisoriesCreateRepositoryAdvisoryCveRequestJson202Response =
  {
    [key: string]: unknown | undefined
  }

export type t_teamsAddOrUpdateMembershipForUserInOrgJsonRequestBody = {
  role?: "member" | "maintainer" | UnknownEnumStringValue
}

export type t_teamsAddOrUpdateMembershipForUserLegacyJsonRequestBody = {
  role?: "member" | "maintainer" | UnknownEnumStringValue
}

export type t_teamsAddOrUpdateProjectPermissionsInOrgJson403Response = {
  documentation_url?: string
  message?: string
}

export type t_teamsAddOrUpdateProjectPermissionsInOrgJsonRequestBody = {
  permission?: "read" | "write" | "admin" | UnknownEnumStringValue
} | null

export type t_teamsAddOrUpdateProjectPermissionsLegacyJson403Response = {
  documentation_url?: string
  message?: string
}

export type t_teamsAddOrUpdateProjectPermissionsLegacyJsonRequestBody = {
  permission?: "read" | "write" | "admin" | UnknownEnumStringValue
}

export type t_teamsAddOrUpdateRepoPermissionsInOrgJsonRequestBody = {
  permission?: string
}

export type t_teamsAddOrUpdateRepoPermissionsLegacyJsonRequestBody = {
  permission?: "pull" | "push" | "admin" | UnknownEnumStringValue
}

export type t_teamsCreateJsonRequestBody = {
  description?: string
  maintainers?: string[]
  name: string
  notification_setting?:
    | "notifications_enabled"
    | "notifications_disabled"
    | UnknownEnumStringValue
  parent_team_id?: number
  permission?: "pull" | "push" | UnknownEnumStringValue
  privacy?: "secret" | "closed" | UnknownEnumStringValue
  repo_names?: string[]
}

export type t_teamsCreateDiscussionCommentInOrgJsonRequestBody = {
  body: string
}

export type t_teamsCreateDiscussionCommentLegacyJsonRequestBody = {
  body: string
}

export type t_teamsCreateDiscussionInOrgJsonRequestBody = {
  body: string
  private?: boolean
  title: string
}

export type t_teamsCreateDiscussionLegacyJsonRequestBody = {
  body: string
  private?: boolean
  title: string
}

export type t_teamsUpdateDiscussionCommentInOrgJsonRequestBody = {
  body: string
}

export type t_teamsUpdateDiscussionCommentLegacyJsonRequestBody = {
  body: string
}

export type t_teamsUpdateDiscussionInOrgJsonRequestBody = {
  body?: string
  title?: string
}

export type t_teamsUpdateDiscussionLegacyJsonRequestBody = {
  body?: string
  title?: string
}

export type t_teamsUpdateInOrgJsonRequestBody = {
  description?: string
  name?: string
  notification_setting?:
    | "notifications_enabled"
    | "notifications_disabled"
    | UnknownEnumStringValue
  parent_team_id?: number | null
  permission?: "pull" | "push" | "admin" | UnknownEnumStringValue
  privacy?: "secret" | "closed" | UnknownEnumStringValue
}

export type t_teamsUpdateLegacyJsonRequestBody = {
  description?: string
  name: string
  notification_setting?:
    | "notifications_enabled"
    | "notifications_disabled"
    | UnknownEnumStringValue
  parent_team_id?: number | null
  permission?: "pull" | "push" | "admin" | UnknownEnumStringValue
  privacy?: "secret" | "closed" | UnknownEnumStringValue
}

export type t_usersAddEmailForAuthenticatedUserJsonRequestBody =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_usersAddSocialAccountForAuthenticatedUserJsonRequestBody = {
  account_urls: string[]
}

export type t_usersCreateGpgKeyForAuthenticatedUserJsonRequestBody = {
  armored_public_key: string
  name?: string
}

export type t_usersCreatePublicSshKeyForAuthenticatedUserJsonRequestBody = {
  key: string
  title?: string
}

export type t_usersCreateSshSigningKeyForAuthenticatedUserJsonRequestBody = {
  key: string
  title?: string
}

export type t_usersDeleteEmailForAuthenticatedUserJsonRequestBody =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_usersDeleteSocialAccountForAuthenticatedUserJsonRequestBody = {
  account_urls: string[]
}

export type t_usersGetAuthenticatedJson200Response =
  | t_private_user
  | t_public_user

export type t_usersGetByIdJson200Response = t_private_user | t_public_user

export type t_usersGetByUsernameJson200Response = t_private_user | t_public_user

export type t_usersListAttestationsJson200Response = {
  attestations?: {
    bundle?: {
      dsseEnvelope?: {
        [key: string]: unknown | undefined
      }
      mediaType?: string
      verificationMaterial?: {
        [key: string]: unknown | undefined
      }
    }
    bundle_url?: string
    repository_id?: number
  }[]
}

export type t_usersSetPrimaryEmailVisibilityForAuthenticatedUserJsonRequestBody =
  {
    visibility: "public" | "private" | UnknownEnumStringValue
  }

export type t_usersUpdateAuthenticatedJsonRequestBody = {
  bio?: string
  blog?: string
  company?: string
  email?: string
  hireable?: boolean
  location?: string
  name?: string
  twitter_username?: string | null
}
