openapi: 3.1.0
info:
  title: spdx-dependency-track
  version: 1.0.0
  license:
    name: MIT
    identifier: MIT

paths:
  /api/licenses:
    get:
      operationId: getLicenses
      responses:
        '200':
          description: A list of all known licenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/License'

  /api/repositories/summaries:
    get:
      operationId: getRepositorySummaries
      responses:
        200:
          description: A list of all repositories and a summary of their licenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositorySummary'
  /api/repositories/{repositoryId}/summary:
    get:
      operationId: getRepositorySummary
      parameters:
        - $ref: '#/components/parameters/repositoryId'
      responses:
        200:
          description: A summary of last scan for a repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositorySummary'
  /api/repositories/{repositoryId}/scans:
    get:
      operationId: getRepositoryScans
      parameters:
        - $ref: '#/components/parameters/repositoryId'
      responses:
        200:
          description: A list of all scans for a given repository
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryScan'

  /api/repositories/{repositoryId}/scans/{scanId}:
    get:
      operationId: getRepositoryScan
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/scanId'
        - name: excludePermissive
          in: query
          schema:
            type: boolean
      responses:
        200:
          description: the details of a specific scan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryScanDependency'

  /api/repositories/scan:
    post:
      operationId: scanRepositories
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  description: A Github PAT
                  type: string
      responses:
        204:
          description: Scan all repositories visible to the provided token

components:
  parameters:
    repositoryId:
      name: repositoryId
      in: path
      required: true
      schema:
        type: string
        format: uuid

    scanId:
      name: scanId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  schemas:
    License:
      type: object
      required:
        - id
        - external_id
        - name
        - group_name
        - risk
      properties:
        id:
          type: string
          format: uuid
        external_id:
          type: string
        name:
          type: string
        group_name:
          type: string
        risk:
          type: number

    RepositorySummary:
      type: object
      required:
        - repositoryId
        - name
        - groups
      properties:
        repositoryId:
          type: string
          format: uuid
        name:
          type: string
        groups:
          type: array
          items:
            type: object
            required:
              - name
              - count
            properties:
              name:
                type: string
              count:
                type: number
    RepositoryScan:
      type: object
      required:
        - scanId
        - repositoryId
        - scannedAt
        - summary
      properties:
        scanId:
          type: string
          format: uuid
        repositoryId:
          type: string
          format: uuid
        scannedAt:
          type: string
          format: date-time
        summary:
          $ref: '#/components/schemas/RepositorySummary'
    RepositoryScanDependency:
      type: object
      required:
        - scanId
        - repositoryId
        - dependencyName
        - dependencyVersion
        - licenseConcludedName
        - licenseConcludedCategory
        - licenseDeclaredName
        - licenseDeclaredCategory
        - supplier
      properties:
        scanId:
          type: string
          format: uuid
        repositoryId:
          type: string
          format: uuid
        dependencyName:
          type: string
        dependencyVersion:
          type: string
        licenseDeclaredName:
          type:
            - string
            - 'null'
        licenseDeclaredCategory:
          type:
            - string
            - 'null'
        licenseConcludedName:
          type:
            - string
            - 'null'
        licenseConcludedCategory:
          type:
            - string
            - 'null'
        supplier:
          type:
            - string
            - 'null'
